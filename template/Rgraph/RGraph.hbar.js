
RGraph=window.RGraph||{isrgraph:true,isRGraph:true,rgraph:true};RGraph.HBar=function(conf)
{var id=conf.id
var canvas=document.getElementById(id);var data=conf.data;this.id=id;this.canvas=canvas;this.context=this.canvas.getContext?this.canvas.getContext("2d",{alpha:(typeof id==='object'&&id.alpha===false)?false:true}):null;this.canvas.__object__=this;this.data=data;this.type='hbar';this.isRGraph=true;this.isrgraph=true;this.rgraph=true;this.uid=RGraph.createUID();this.canvas.uid=this.canvas.uid?this.canvas.uid:RGraph.createUID();this.colorsParsed=false;this.coords=[];this.coords2=[];this.coordsText=[];this.original_colors=[];this.firstDraw=true;this.yaxisLabelsSize=0;this.yaxisTitleSize=0;this.max=0;this.stackedOrGrouped=false;this.properties={marginLeft:25,marginLeftAuto:true,marginRight:25,marginTop:25,marginBottom:25,marginInner:2,marginInnerGrouped:2,backgroundBarsCount:null,backgroundBarsColor1:'rgba(0,0,0,0)',backgroundBarsColor2:'rgba(0,0,0,0)',backgroundGrid:true,backgroundGridColor:'#ddd',backgroundGridLinewidth:1,backgroundGridHsize:25,backgroundGridVsize:25,backgroundGridHlines:true,backgroundGridVlines:true,backgroundGridBorder:true,backgroundGridAutofit:true,backgroundGridAutofitAlign:true,backgroundGridHlinesCount:null,backgroundGridVlinesCount:5,backgroundGridDashed:false,backgroundGridDotted:false,backgroundColor:null,linewidth:1,title:'',titleBackground:null,titleHpos:null,titleVpos:null,titleBold:null,titleItalic:null,titleFont:null,titleSize:null,titleColor:null,titleX:null,titleY:null,titleHalign:null,titleValign:null,textSize:12,textColor:'black',textFont:'Arial, Verdana, sans-serif',textBold:false,textItalic:false,textAngle:0,textAccessible:true,textAccessibleOverflow:'visible',textAccessiblePointerevents:false,colors:['red','blue','green','pink','yellow','cyan','navy','gray','black'],colorsSequential:false,colorsStroke:'rgba(0,0,0,0)',axes:true,axesColor:'black',axesLinewidth:1,xaxis:true,xaxisLabels:true,xaxisLabelsCount:5,xaxisLabelsBold:null,xaxisLabelsItalic:null,xaxisLabelsFont:null,xaxisLabelsSize:null,xaxisLabelsColor:null,xaxisLabelsSpecific:null,xaxisLabelsOffsetx:0,xaxisLabelsOffsety:0,xaxisScaleUnitsPre:'',xaxisScaleUnitsPost:'',xaxisScaleMin:0,xaxisScaleMax:0,xaxisScalePoint:'.',xaxisScaleThousand:',',xaxisScaleDecimals:null,xaxisScaleZerostart:true,xaxisTitle:'',xaxisTitleBold:null,xaxisTitleItalic:null,xaxisTitleSize:null,xaxisTitleFont:null,xaxisTitleColor:null,xaxisTitleX:null,xaxisTitleY:null,xaxisTitlePos:null,xaxisTickmarks:true,xaxisTickmarksCount:10,yaxis:true,yaxisLabelsFont:null,yaxisLabelsSize:null,yaxisLabelsColor:null,yaxisLabelsBold:null,yaxisLabelsItalic:null,yaxisLabelsOffsetx:0,yaxisLabelsOffsety:0,yaxisPosition:'left',yaxisTitle:'',yaxisTitleBold:null,yaxisTitleItalic:null,yaxisTitleSize:null,yaxisTitleFont:null,yaxisTitleColor:null,yaxisTitlePos:null,yaxisTitleX:null,yaxisTitleY:null,yaxisTickmarksCount:data.length,yaxisTickmarks:true,labelsAbove:false,labelsAboveDecimals:0,labelsAboveSpecific:null,labelsAboveUnitsPre:'',labelsAboveUnitsPost:'',labelsAboveColor:null,labelsAboveFont:null,labelsAboveSize:null,labelsAboveBold:null,labelsAboveItalic:null,contextmenu:null,key:null,keyBackground:'white',keyPosition:'graph',keyHalign:'right',keyShadow:false,keyShadowColor:'#666',keyShadowBlur:3,keyShadowOffsetx:2,keyShadowOffsety:2,keyPositionMarginBoxed:false,keyPositionX:null,keyPositionY:null,keyColorShape:'square',keyRounded:true,keyLinewidth:1,keyColors:null,keyInteractive:false,keyInteractiveHighlightChartStroke:'black',keyInteractiveHighlightChartFill:'rgba(255,255,255,0.7)',keyInteractiveHighlightLabel:'rgba(255,0,0,0.2)',keyLabelsColor:null,keyLabelsFont:null,keyLabelsSize:null,keyLabelsBold:null,keyLabelsItalic:null,keyLabelsOffsetx:0,keyLabelsOffsety:0,unitsIngraph:false,shadow:false,shadowColor:'#666',shadowBlur:3,shadowOffsetx:3,shadowOffsety:3,grouping:'grouped',tooltips:null,tooltipsEvent:'onclick',tooltipsEffect:'fade',tooltipsCssClass:'RGraph_tooltip',tooltipsHighlight:true,highlightFill:'rgba(255,255,255,0.7)',highlightStroke:'rgba(0,0,0,0)',highlightStyle:null,annotatable:false,annotatableColor:'black',annotatableLinewidth:1,resizable:false,resizableHandleAdjust:[0,0],resizableHandleBackground:null,redraw:true,variant:'hbar',variantThreedAngle:0.1,variantThreedOffsetx:10,variantThreedOffsety:5,variantThreedXaxis:true,variantThreedYaxis:true,adjustable:false,adjustableOnly:null,clearto:'rgba(0,0,0,0)'}
if(!this.canvas){alert('[HBAR] No canvas support');return;}
for(i=0,len=this.data.length;i<len;++i){if(typeof this.data[i]=='object'&&!RGraph.isNull(this.data[i])){this.stackedOrGrouped=true;for(var j=0,len2=this.data[i].length;j<len2;++j){if(typeof this.data[i][j]==='string'){this.data[i][j]=parseFloat(this.data[i][j]);}}}else if(typeof this.data[i]=='string'){this.data[i]=parseFloat(this.data[i])||0;}else if(typeof this.data[i]==='undefined'){this.data[i]=null;}}
var linear_data=RGraph.arrayLinearize(data);for(var i=0,len=linear_data.length;i<len;++i){this['$'+i]={};}
this.data_arr=RGraph.arrayLinearize(this.data);if(!this.canvas.__rgraph_aa_translated__){this.context.translate(0.5,0.5);this.canvas.__rgraph_aa_translated__=true;}
var prop=this.properties;this.path=RGraph.pathObjectFunction;if(RGraph.Effects&&typeof RGraph.Effects.decorate==='function'){RGraph.Effects.decorate(this);}
this.responsive=RGraph.responsive;this.set=function(name)
{var value=typeof arguments[1]==='undefined'?null:arguments[1];if(arguments.length===1&&typeof arguments[0]==='object'){for(i in arguments[0]){if(typeof i==='string'){this.set(i,arguments[0][i]);}}
return this;}
prop[name]=value;return this;};this.get=function(name)
{return prop[name];};this.draw=function()
{RGraph.fireCustomEvent(this,'onbeforedraw');if(prop.adjustable&&prop.grouping==='stacked'){alert('[RGRAPH] The HBar does not support stacked charts with adjusting');}
if(RGraph.isNull(prop.backgroundGridHlines.count)){this.set('backgroundGridHlinesCount',this.data.length);}
if(prop.variant==='3d'){if(prop.textAccessible){}else{this.context.setTransform(1,prop.variantThreedAngle,0,1,0.5,0.5);}
if(prop.marginBottom===25){this.set('marginBottom',80);}}
if(!this.colorsParsed){this.parseColors();this.colorsParsed=true;}
if(prop.yaxisLabels){var labels=prop.yaxisLabels,marginName=prop.yaxisPosition==='right'?'marginRight':'marginLeft';var textConf=RGraph.getTextConf({object:this,prefix:'yaxisLabels'});for(var i=0,len=0;i<labels.length;i+=1){var length=RGraph.measureText(labels[i],textConf.bold,textConf.font,textConf.size)[0]||0;this.yaxisLabelsSize=Math.max(len,length);len=this.yaxisLabelsSize;}
if(prop.yaxisTitle){var textConf=RGraph.getTextConf({object:this,prefix:'yaxisTitle'});var titleSize=RGraph.measureText(prop.yaxisTitle,textConf.bold,textConf.font,textConf.size)||[];this.yaxisTitleSize+=titleSize[1];prop[marginName]+=this.yaxisTitleSize;}}
if(prop.marginLeftAuto){var name=prop.yaxisPosition==='right'?'marginRight':'marginLeft';prop[name]=this.yaxisLabelsSize+this.yaxisTitleSize+10;}
this.marginLeft=prop.marginLeft;this.marginRight=prop.marginRight;this.marginTop=prop.marginTop;this.marginBottom=prop.marginBottom;this.coords=[];this.coords2=[];this.coordsText=[];this.max=0;if(prop.xaxisScaleMin>0&&prop.grouping==='stacked'){alert('[HBAR] Using xaxisScaleMin is not supported with stacked charts, resetting xaxisScaleMin to zero');this.set('xaxisScaleMin',0);}
this.graphwidth=this.canvas.width-this.marginLeft-this.marginRight;this.graphheight=this.canvas.height-this.marginTop-this.marginBottom;this.halfgrapharea=this.grapharea/2;this.halfTextHeight=prop.textSize/2;this.halfway=Math.round((this.graphwidth/2)+this.marginLeft);RGraph.Background.draw(this);this.drawbars();this.drawAxes();this.drawLabels();if(prop.key&&prop.key.length){RGraph.drawKey(this,prop.key,prop.colors);}
if(prop.contextmenu){RGraph.showContext(this);}
RGraph.drawInGraphLabels(this);if(prop.resizable){RGraph.allowResizing(this);}
RGraph.installEventListeners(this);if(this.firstDraw){this.firstDraw=false;RGraph.fireCustomEvent(this,'onfirstdraw');this.firstDrawFunc();}
RGraph.fireCustomEvent(this,'ondraw');return this;};this.exec=function(func)
{func(this);return this;};this.drawAxes=function()
{var halfway=this.halfway;this.context.beginPath();this.context.lineWidth=prop.axesLinewidth?prop.axesLinewidth+0.001:1.001;this.context.strokeStyle=prop.axesColor;if(prop.yaxis&&prop.axes){if(prop.yaxisPosition=='center'){this.context.moveTo(halfway,this.marginTop);this.context.lineTo(halfway,this.canvas.height-this.marginBottom);}else if(prop.yaxisPosition=='right'){this.context.moveTo(this.canvas.width-this.marginRight,this.marginTop);this.context.lineTo(this.canvas.width-this.marginRight,this.canvas.height-this.marginBottom);}else{this.context.moveTo(this.marginLeft,this.marginTop);this.context.lineTo(this.marginLeft,this.canvas.height-this.marginBottom);}}
if(prop.xaxis&&prop.axes){this.context.moveTo(this.marginLeft+0.001,this.canvas.height-this.marginBottom+0.001);this.context.lineTo(this.canvas.width-this.marginRight+0.001,this.canvas.height-this.marginBottom+0.001);}
if(prop.yaxisTickmarks&&prop.yaxis&&prop.yaxisTickmarksCount>0&&prop.axes){var yTickGap=(this.canvas.height-this.marginTop-this.marginBottom)/(prop.yaxisTickmarksCount>0?prop.yaxisTickmarksCount:this.data.length);for(y=this.marginTop;y<(this.canvas.height-this.marginBottom-1);y+=yTickGap){if(prop.yaxisPosition=='center'){this.context.moveTo(halfway+3,Math.round(y));this.context.lineTo(halfway-3,Math.round(y));}else if(prop.yaxisPosition=='right'){this.context.moveTo(this.canvas.width-this.marginRight,Math.round(y));this.context.lineTo(this.canvas.width-this.marginRight+3,Math.round(y));}else{this.context.moveTo(this.marginLeft,Math.round(y));this.context.lineTo(this.marginLeft-3,Math.round(y));}}
if(!prop.xaxis){if(prop.yaxisPosition==='center'){this.context.moveTo(halfway+3,Math.round(y));this.context.lineTo(halfway-3,Math.round(y));}else if(prop.yaxisPosition==='right'){this.context.moveTo(this.canvas.width-this.marginRight,Math.round(y));this.context.lineTo(this.canvas.width-this.marginRight+3,Math.round(y));}else{this.context.moveTo(this.marginLeft,Math.round(y));this.context.lineTo(this.marginLeft-3,Math.round(y));}}}
if(prop.xaxisTickmarks&&prop.xaxis&&prop.xaxisTickmarksCount>0&&prop.axes){xTickGap=(this.canvas.width-this.marginLeft-this.marginRight)/prop.xaxisTickmarksCount;yStart=this.canvas.height-this.marginBottom;yEnd=(this.canvas.height-this.marginBottom)+3;var cnt=prop.xaxisTickmarksCount,interval=(this.canvas.width-prop.marginLeft-prop.marginRight)/cnt,x=prop.marginLeft;if(prop.yaxisPosition==='center'){interval/=2;for(var i=0;i<cnt;++i,x+=interval){this.context.moveTo(Math.round(x),yStart);this.context.lineTo(Math.round(x),yEnd);}
x=(this.graphwidth/2)+this.marginLeft+interval;for(var i=0;i<cnt;++i,x+=interval){this.context.moveTo(Math.round(x),yStart);this.context.lineTo(Math.round(x),yEnd);}}else if(prop.yaxisPosition==='right'){for(var i=0;i<cnt;++i,x+=interval){this.context.moveTo(Math.round(x),yStart);this.context.lineTo(Math.round(x),yEnd);}}else{x+=interval;for(var i=0;i<cnt;++i,x+=interval){this.context.moveTo(Math.round(x),yStart);this.context.lineTo(Math.round(x),yEnd);}}
if(!prop.yaxis){x=this.marginLeft;if(prop.yaxisPosition==='right'){x=this.canvas.width-this.marginRight;}
this.context.moveTo(x,Math.round(yStart));this.context.lineTo(x,Math.round(yEnd));}}
this.context.stroke();this.context.lineWidth=1;};this.drawLabels=function()
{var units_pre=prop.xaxisScaleUnitsPre,units_post=prop.xaxisScaleUnitsPost,text_size=prop.textSize,font=prop.textFont,offsetx=prop.xaxisLabelsOffsetx,offsety=prop.xaxisLabelsOffsety
if(prop.unitsIngraph){units_pre='';units_post='';}
if(prop.xaxisLabels){if(RGraph.isArray(prop.xaxisLabelsSpecific)){if(prop.yaxisPosition=='center'){var halfGraphWidth=this.graphwidth/2;var labels=prop.xaxisLabelsSpecific;var interval=(this.graphwidth/2)/(labels.length-1);this.context.fillStyle=prop.xaxisLabels;var textConf=RGraph.getTextConf({object:this,prefix:'xaxisLabels'});for(var i=0;i<labels.length;i+=1){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft+halfGraphWidth+(interval*i)+offsetx,y:this.canvas.height-this.marginBottom+offsetx,text:labels[i],valign:'top',halign:prop.textAngle!==0?'right':'center',tag:'scale',angle:-1*prop.textAngle});}
for(var i=(labels.length-1);i>0;i-=1){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft+(interval*(labels.length-i-1))+offsetx,y:this.canvas.height-this.marginBottom+offsety,text:labels[i],valign:'top',halign:prop.textAngle!==0?'right':'center',tag:'scale',angle:-1*prop.textAngle});}}else if(prop.yaxisPosition=='right'){var labels=prop.xaxisLabelsSpecific;var interval=this.graphwidth/(labels.length-1);this.context.fillStyle=prop.textColor;var textConf=RGraph.getTextConf({object:this,prefix:'xaxisLabels'});for(var i=0;i<labels.length;i+=1){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft+(interval*i)+offsetx,y:this.canvas.height-this.marginBottom+offsety,text:labels[labels.length-i-1],valign:'top',halign:prop.textAngle!==0?'right':'center',tag:'scale',angle:-1*prop.textAngle});}}else{var labels=prop.xaxisLabelsSpecific;var interval=this.graphwidth/(labels.length-1);this.context.fillStyle=prop.textColor;var textConf=RGraph.getTextConf({object:this,prefix:'xaxisLabels'});for(var i=0;i<labels.length;i+=1){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft+(interval*i)+offsetx,y:this.canvas.height-this.marginBottom+offsety,text:labels[i],valign:'top',halign:prop.textAngle!==0?'right':'center',tag:'scale',angle:-1*prop.textAngle});}}}else{var gap=7;this.context.beginPath();this.context.fillStyle=prop.textColor;var textConf=RGraph.getTextConf({object:this,prefix:'xaxisLabels'});if(prop.yaxisPosition=='center'){for(var i=0;i<this.scale2.labels.length;++i){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft+(this.graphwidth/2)-((this.graphwidth/2)*((i+1)/this.scale2.labels.length))+offsetx,y:this.marginTop+this.halfTextHeight+this.graphheight+gap+offsety,text:'-'+this.scale2.labels[i],valign:'center',halign:(typeof prop.textAngle==='number'&&prop.textAngle!==0)?'right':'center',tag:'scale',angle:-1*prop.textAngle});}
for(var i=0;i<this.scale2.labels.length;++i){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft+((this.graphwidth/2)*((i+1)/this.scale2.labels.length))+(this.graphwidth/2)+offsetx,y:this.marginTop+this.halfTextHeight+this.graphheight+gap+offsety,text:this.scale2.labels[i],valign:'center',halign:prop.textAngle!==0?'right':'center',tag:'scale',angle:-1*prop.textAngle});}}else if(prop.yaxisPosition=='right'){for(var i=0,len=this.scale2.labels.length;i<len;++i){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft+(i*(this.graphwidth/len))+offsetx,y:this.marginTop+this.halfTextHeight+this.graphheight+gap+offsety,text:'-'+this.scale2.labels[len-1-i],valign:'center',halign:prop.textAngle!==0?'right':'center',tag:'scale',angle:-1*prop.textAngle});}}else{for(var i=0,len=this.scale2.labels.length;i<len;++i){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft+(this.graphwidth*((i+1)/len))+offsetx,y:this.marginTop+this.halfTextHeight+this.graphheight+gap+offsety,text:this.scale2.labels[i],valign:'center',halign:prop.textAngle!==0?'right':'center',tag:'scale',angle:-1*prop.textAngle});}}
if(prop.xaxisScaleMin>0||!prop.yaxis||prop.xaxisScaleZerostart||!prop.axes){var x=prop.yaxisPosition==='center'?this.marginLeft+(this.graphwidth/2):this.marginLeft;if(prop.yaxisPosition==='right'){var x=this.canvas.width-this.marginRight;}
RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:x+offsetx,y:this.marginTop+this.halfTextHeight+this.graphheight+gap+offsety,text:RGraph.numberFormat({object:this,number:prop.xaxisScaleMin.toFixed(prop.xaxisScaleMin===0?0:prop.xaxisScaleDecimals),unitspre:units_pre,unitspost:units_post,point:prop.xaxisScalePoint,thousand:prop.xaxisScaleThousand}),valign:'center',halign:prop.textAngle!==0?'right':'center',tag:'scale',angle:-1*prop.textAngle});}
this.context.fill();this.context.stroke();}}
if(typeof prop.yaxisLabels==='object'){var xOffset=prop.variant==='3d'&&prop.yaxisPosition==='right'?15:5,offsetx=prop.yaxisLabelsOffsetx,offsety=prop.yaxisLabelsOffsety
var barHeight=(this.canvas.height-this.marginTop-this.marginBottom)/prop.yaxisLabels.length;yTickGap=(this.canvas.height-this.marginTop-this.marginBottom)/prop.yaxisLabels.length
if(prop.yaxisPosition==='right'){var x=this.canvas.width-this.marginRight+xOffset;var halign='left'}else{var x=this.marginLeft-xOffset;var halign='right'}
var textConf=RGraph.getTextConf({object:this,prefix:'yaxisLabels'});var i=0;for(y=this.marginTop+(yTickGap/2);y<=this.canvas.height-this.marginBottom;y+=yTickGap){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:x+offsetx,y:y+offsety,text:String(prop.yaxisLabels[i++]),halign:halign,valign:'center',tag:'labels'});}}};this.drawbars=function()
{this.context.lineWidth=prop.linewidth;this.context.strokeStyle=prop.colorsStroke;this.context.fillStyle=prop.colors[0];var prevX=0,prevY=0;if(prop.xaxisScaleMax){this.scale2=RGraph.getScale({object:this,options:{'scale.max':prop.xaxisScaleMax,'scale.min':prop.xaxisScaleMin,'scale.decimals':Number(prop.xaxisScaleDecimals),'scale.point':prop.xaxisScalePoint,'scale.thousand':prop.xaxisScaleThousand,'scale.round':prop.xaxisScaleRound,'scale.units.pre':prop.xaxisScaleUnitsPre,'scale.units.post':prop.xaxisScaleUnitsPost,'scale.labels.count':prop.xaxisLabelsCount,'scale.strict':true}});this.max=this.scale2.max;}else{var grouping=prop.grouping;for(i=0;i<this.data.length;++i){if(typeof(this.data[i])=='object'){var value=grouping=='grouped'?Number(RGraph.arrayMax(this.data[i],true)):Number(RGraph.arraySum(this.data[i]));}else{var value=Number(Math.abs(this.data[i]));}
this.max=Math.max(Math.abs(this.max),Math.abs(value));}
this.scale2=RGraph.getScale({object:this,options:{'scale.max':this.max,'scale.min':prop.xaxisScaleMin,'scale.decimals':Number(prop.xaxisScaleDecimals),'scale.point':prop.xaxisScalePoint,'scale.thousand':prop.xaxisScaleThousand,'scale.round':prop.xaxisScaleRound,'scale.units.pre':prop.xaxisScaleUnitsPre,'scale.units.post':prop.xaxisScaleUnitsPost,'scale.labels.count':prop.xaxisLabelsCount}});this.max=this.scale2.max;this.min=this.scale2.min;}
if(prop.xaxisScaleDecimals==null&&Number(this.max)==1){this.set('xaxisScaleDecimals',1);}
var colorIdx=0;this.numbars=RGraph.arrayLinearize(this.data).length;if(prop.adjustable&&!prop.xaxisScaleMax){this.set('xaxisScaleMax',this.scale2.max);}
if(prop.variant==='3d'){RGraph.draw3DAxes(this);}
var graphwidth=(this.canvas.width-this.marginLeft-this.marginRight);var halfwidth=graphwidth/2;for(i=(len=this.data.length-1);i>=0;--i){var width=Math.abs((this.data[i]/this.max)*graphwidth);var height=this.graphheight/this.data.length;var orig_height=height;var x=this.marginLeft;var y=this.marginTop+(i*height);var vmargin=prop.marginInner;if(prop.yaxisPosition==='right'){x=this.canvas.width-this.marginRight-Math.abs(width);}
if(width<0){x-=width;width=Math.abs(width);}
if(prop.shadow){this.context.shadowColor=prop.shadowColor;this.context.shadowBlur=prop.shadowBlur;this.context.shadowOffsetX=prop.shadowOffsetx;this.context.shadowOffsetY=prop.shadowOffsety;}
this.context.beginPath();if(typeof this.data[i]=='number'||RGraph.isNull(this.data[i])){var barHeight=height-(2*vmargin),barWidth=((this.data[i]-prop.xaxisScaleMin)/(this.max-prop.xaxisScaleMin))*this.graphwidth,barX=this.marginLeft;if(prop.yaxisPosition=='center'){barWidth/=2;barX+=halfwidth;if(this.data[i]<0){barWidth=(Math.abs(this.data[i])-prop.xaxisScaleMin)/(this.max-prop.xaxisScaleMin);barWidth=barWidth*(this.graphwidth/2);barX=((this.graphwidth/2)+this.marginLeft)-barWidth;}}else if(prop.yaxisPosition=='right'){barWidth=Math.abs(barWidth);barX=this.canvas.width-this.marginRight-barWidth;}
this.context.strokeStyle=prop.colorsStroke;this.context.fillStyle=prop.colors[0];++colorIdx;if(prop.colorsSequential&&typeof colorIdx==='number'){if(prop.colors[this.numbars-colorIdx]){this.context.fillStyle=prop.colors[this.numbars-colorIdx];}else{this.context.fillStyle=prop.colors[prop.colors.length-1];}}
this.context.strokeRect(barX,this.marginTop+(i*height)+prop.marginInner,barWidth,barHeight);this.context.fillRect(barX,this.marginTop+(i*height)+prop.marginInner,barWidth,barHeight);this.coords.push([barX,y+vmargin,barWidth,height-(2*vmargin),this.context.fillStyle,this.data[i],true]);if(prop.variant==='3d'&&typeof this.data[i]=='number'){var prevStrokeStyle=this.context.strokeStyle,prevFillStyle=this.context.fillStyle;RGraph.noShadow(this);var barX=barX,barY=y+vmargin,barW=barWidth,barH=height-(2*vmargin),offsetX=prop.variantThreedOffsetx,offsetY=prop.variantThreedOffsety,value=this.data[i];this.path({path:'b m % % l % % l % % l % % c s % f % f rgba(255,255,255,0.6)',args:[barX,barY,barX+offsetX-(prop.yaxisPosition=='left'&&value<0?offsetX:0),barY-offsetY,barX+barW+offsetX-(prop.yaxisPosition=='center'&&value<0?offsetX:0),barY-offsetY,barX+barW,barY,this.context.strokeStyle,this.context.fillStyle]});if(prop.yaxisPosition!=='right'&&!(prop.yaxisPosition==='center'&&value<0)&&value>=0&&!RGraph.isNull(value)){this.path({path:'b fs % m % % l % % l % % l % % c s % f % f rgba(0,0,0,0.25)',args:[prevFillStyle,barX+barW,barY,barX+barW+offsetX,barY-offsetY,barX+barW+offsetX,barY-offsetY+barH,barX+barW,barY+barH,this.context.strokeStyle,prevFillStyle,]});}}}else if(typeof(this.data[i])=='object'&&prop.grouping=='stacked'){if(prop.yaxisPosition=='center'){alert('[HBAR] You can\'t have a stacked chart with the Y axis in the center, change it to grouped');}else if(prop.yaxisPosition=='right'){var x=this.canvas.width-this.marginRight}
var barHeight=height-(2*vmargin);if(typeof this.coords2[i]=='undefined'){this.coords2[i]=[];}
for(j=0;j<this.data[i].length;++j){if(prop.shadow&&prop.variant==='3d'){this.context.shadowColor=prop.shadowColor;this.context.shadowBlur=prop.shadowBlur;this.context.shadowOffsetX=prop.shadowOffsetx;this.context.shadowOffsetY=prop.shadowOffsety;}
if(!RGraph.isNull(this.data[i][j]))this.data[i][j]=Math.abs(this.data[i][j]);var last=(j===(this.data[i].length-1));this.context.strokeStyle=prop.colorsStroke;++colorIdx;if(prop.colorsSequential&&typeof colorIdx==='number'){if(prop.colors[this.numbars-colorIdx]){this.context.fillStyle=prop.colors[this.numbars-colorIdx];}else{this.context.fillStyle=prop.colors[prop.colors.length-1];}}else if(prop.colors[j]){this.context.fillStyle=prop.colors[j];}
var width=(((this.data[i][j])/(this.max)))*this.graphwidth;var totalWidth=(RGraph.arraySum(this.data[i])/this.max)*this.graphwidth;if(prop.yaxisPosition==='right'){x-=width;}
this.context.strokeRect(x,this.marginTop+prop.marginInner+(this.graphheight/this.data.length)*i,width,height-(2*vmargin));this.context.fillRect(x,this.marginTop+prop.marginInner+(this.graphheight/this.data.length)*i,width,height-(2*vmargin));this.coords.push([x,y+vmargin,width,height-(2*vmargin),this.context.fillStyle,RGraph.arraySum(this.data[i]),j==(this.data[i].length-1)]);this.coords2[i].push([x,y+vmargin,width,height-(2*vmargin),this.context.fillStyle,RGraph.arraySum(this.data[i]),j==(this.data[i].length-1)]);if(prop.variant==='3d'){RGraph.noShadow(this);var prevStrokeStyle=this.context.strokeStyle,prevFillStyle=this.context.fillStyle;var barX=x,barY=y+vmargin,barW=width,barH=height-(2*vmargin),offsetX=prop.variantThreedOffsetx,offsetY=prop.variantThreedOffsety,value=this.data[i][j];if(!RGraph.isNull(value)){this.path({path:'b m % % l % % l % % l % % c s % f % f rgba(255,255,255,0.6)',args:[barX,barY,barX+offsetX,barY-offsetY,barX+barW+offsetX,barY-offsetY,barX+barW,barY,this.context.strokeStyle,this.context.fillStyle]});}
if(prop.yaxisPosition!=='right'&&!(prop.yaxisPosition==='center'&&value<0)&&!RGraph.isNull(value)){this.path({path:'fs % b m % % l % % l % % l % % c s % f % f rgba(0,0,0,0.25)',args:[prevFillStyle,barX+barW,barY,barX+barW+offsetX,barY-offsetY,barX+barW+offsetX,barY-offsetY+barH,barX+barW,barY+barH,this.context.strokeStyle,prevFillStyle]});}
this.context.beginPath();this.context.strokeStyle=prevStrokeStyle;this.context.fillStyle=prevFillStyle;}
if(prop.yaxisPosition!=='right'){x+=width;}}}else if(typeof(this.data[i])=='object'&&prop.grouping=='grouped'){var vmarginGrouped=prop.marginInnerGrouped;var individualBarHeight=((height-(2*vmargin)-((this.data[i].length-1)*vmarginGrouped))/this.data[i].length)
if(typeof this.coords2[i]=='undefined'){this.coords2[i]=[];}
for(j=(this.data[i].length-1);j>=0;--j){if(prop.shadow){RGraph.setShadow(this,prop.shadowColor,prop.shadowOffsetx,prop.shadowOffsety,prop.shadowBlur);}
this.context.strokeStyle=prop.colorsStroke;++colorIdx;if(prop.colorsSequential&&typeof colorIdx==='number'){if(prop.colors[this.numbars-colorIdx]){this.context.fillStyle=prop.colors[this.numbars-colorIdx];}else{this.context.fillStyle=prop.colors[prop.colors.length-1];}}else if(prop.colors[j]){this.context.fillStyle=prop.colors[j];}
var startY=this.marginTop+(height*i)+(individualBarHeight*j)+vmargin+(vmarginGrouped*j);var width=((this.data[i][j]-prop.xaxisScaleMin)/(this.max-prop.xaxisScaleMin))*(this.canvas.width-this.marginLeft-this.marginRight);var startX=this.marginLeft;if(prop.yaxisPosition=='center'){width/=2;startX+=halfwidth;}else if(prop.yaxisPosition=='right'){width=Math.abs(width);startX=this.canvas.width-this.marginRight-Math.abs(width);}
if(width<0){startX+=width;width*=-1;}
this.context.strokeRect(startX,startY,width,individualBarHeight);this.context.fillRect(startX,startY,width,individualBarHeight);this.coords.push([startX,startY,width,individualBarHeight,this.context.fillStyle,this.data[i][j],true]);this.coords2[i].push([startX,startY,width,individualBarHeight,this.context.fillStyle,this.data[i][j],true]);if(prop.variant==='3d'){RGraph.noShadow(this);var prevStrokeStyle=this.context.strokeStyle,prevFillStyle=this.context.fillStyle;var barX=startX,barY=startY,barW=width,barH=individualBarHeight,offsetX=prop.variantThreedOffsetx,offsetY=prop.variantThreedOffsety,value=this.data[i][j];this.path({path:'b m % % l % % l % % l % % c s % f % f rgba(255,255,255,0.6)',args:[barX,barY,barX+offsetX,barY-offsetY,barX+barW+offsetX-(value<0?offsetX:0),barY-offsetY,barX+barW,barY,this.context.strokeStyle,this.context.fillStyle]});if(prop.yaxisPosition!=='right'&&!(prop.yaxisPosition==='center'&&value<0)&&value>=0&&!RGraph.isNull(value)){this.path({path:'fs % b m % %  l % % l % % l % % c s % f % f rgba(0,0,0,0.25)',args:[prevFillStyle,barX+barW,barY,barX+barW+offsetX,barY-offsetY,barX+barW+offsetX,barY-offsetY+barH,barX+barW,barY+barH,this.context.strokeStyle,prevFillStyle,]});}
this.context.beginPath();this.context.strokeStyle=prevStrokeStyle;this.context.fillStyle=prevFillStyle;}}
startY+=vmargin;}
this.context.closePath();}
this.context.stroke();this.context.fill();if(prop.yaxisPosition==='right'){this.path({path:'cr % % % %',args:[this.canvas.width-this.marginRight+prop.variantThreedOffsetx,'0',this.marginRight,this.canvas.height]});}
if(prop.yaxisPosition==='right'&&prop.variant==='3d'){RGraph.draw3DYAxis(this);}
RGraph.noShadow(this);this.coords=RGraph.arrayReverse(this.coords);if(prop.grouping==='grouped'){for(var i=0;i<this.coords2.length;++i){this.coords2[i]=RGraph.arrayReverse(this.coords2[i]);}}
this.redrawBars();};this.redrawBars=function()
{if(!prop.redraw){return;}
var coords=this.coords;var font=prop.textFont,size=prop.textSize,color=prop.textColor;RGraph.noShadow(this);this.context.strokeStyle=prop.colorsStroke;for(var i=0;i<coords.length;++i){if(prop.shadow){this.path({path:'b lw % r % % % % s % f %',args:[prop.linewidth,coords[i][0],coords[i][1],coords[i][2],coords[i][3],prop.colorsStroke,coords[i][4]]});}
var halign='left';if(prop.labelsAbove&&coords[i][6]){var border=(coords[i][0]+coords[i][2]+7+this.context.measureText(prop.labelsAboveUnitsPre+this.coords[i][5]+prop.labelsAboveUnitsPost).width)>this.canvas.width?true:false,text=RGraph.numberFormat({object:this,number:(this.coords[i][5]).toFixed(prop.labelsAboveDecimals),unitspre:prop.labelsAboveUnitsPre,unitspost:prop.labelsAboveUnitsPost,point:prop.labelsAbovePoint,thousand:prop.labelsAboveThousand});RGraph.noShadow(this);if(typeof prop.labelsAboveSpecific==='object'&&prop.labelsAboveSpecific&&prop.labelsAboveSpecific[i]){text=prop.labelsAboveSpecific[i];}
var x=coords[i][0]+coords[i][2]+5;var y=coords[i][1]+(coords[i][3]/2);if(prop.yaxisPosition==='right'){x=coords[i][0]-5;halign='right';}else if(prop.yaxisPosition==='center'&&this.data_arr[i]<0){x=coords[i][0]-5;halign='right';}
var textConf=RGraph.getTextConf({object:this,prefix:'labelsAbove'});RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:x,y:y,text:text,valign:'center',halign:halign,tag:'labels.above'});}}};this.getShape=function(e)
{var mouseXY=RGraph.getMouseXY(e);for(var i=0,len=this.coords.length;i<len;i++){var mouseX=mouseXY[0],mouseY=mouseXY[1],left=this.coords[i][0],top=this.coords[i][1],width=this.coords[i][2],height=this.coords[i][3],idx=i;this.path({path:'b r % % % %',args:[left,top,width,height]});if(this.context.isPointInPath(mouseX,mouseY)){if(RGraph.parseTooltipText){var tooltip=RGraph.parseTooltipText(prop.tooltips,i);}
var indexes=RGraph.sequentialIndexToGrouped(idx,this.data);var group=indexes[0];var index=indexes[1];return{object:this,x:left,y:top,width:width,height:height,sequentialIndex:idx,dataset:group,index:index,tooltip:typeof tooltip==='string'?tooltip:null};}}};this.getValue=function(arg)
{if(arg.length==2){var mouseX=arg[0];var mouseY=arg[1];}else{var mouseCoords=RGraph.getMouseXY(arg);var mouseX=mouseCoords[0];var mouseY=mouseCoords[1];}
if(mouseY<this.marginTop||mouseY>(this.canvas.height-this.marginBottom)||mouseX<this.marginLeft||mouseX>(this.canvas.width-this.marginRight)){return null;}
if(prop.yaxisPosition=='center'){var value=((mouseX-this.marginLeft)/(this.graphwidth/2))*(this.max-prop.xaxisScaleMin);value=value-this.max
if(prop.xaxisScaleMin>0){value=((mouseX-this.marginLeft-(this.graphwidth/2))/(this.graphwidth/2))*(this.max-prop.xaxisScaleMin);value+=prop.xaxisScaleMin;if(mouseX<(this.marginLeft+(this.graphwidth/2))){value-=(2*prop.xaxisScaleMin);}}}else if(prop.yaxisPosition=='right'){var value=((mouseX-this.marginLeft)/this.graphwidth)*(this.scale2.max-prop.xaxisScaleMin);value=this.scale2.max-value;}else{var value=((mouseX-this.marginLeft)/this.graphwidth)*(this.scale2.max-prop.xaxisScaleMin);value+=prop.xaxisScaleMin;}
return value;};this.highlight=function(shape)
{if(typeof prop.highlightStyle==='function'){(prop.highlightStyle)(shape);}else{RGraph.Highlight.rect(this,shape);}};this.getObjectByXY=function(e)
{var mouseXY=RGraph.getMouseXY(e);if(prop.variant==='3d'){var adjustment=prop.variantThreedAngle*mouseXY[0];mouseXY[1]-=adjustment;}
if(mouseXY[0]>=this.marginLeft&&mouseXY[0]<=(this.canvas.width-this.marginRight)&&mouseXY[1]>=this.marginTop&&mouseXY[1]<=(this.canvas.height-this.marginBottom)){return this;}};this.getXCoord=function(value)
{if(prop.yaxisPosition=='center'){if(value>this.max||value<(-1*this.max)){return null;}
var width=(this.canvas.width-prop.marginLeft-prop.marginRight)/2;var coord=(((value-prop.xaxisScaleMin)/(this.max-prop.xaxisScaleMin))*width)+width;coord=prop.marginLeft+coord;}else{if(value>this.max||value<0){return null;}
var width=this.canvas.width-prop.marginLeft-prop.marginRight;var coord=((value-prop.xaxisScaleMin)/(this.max-prop.xaxisScaleMin))*width;coord=prop.marginLeft+coord;}
return coord;};this.parseColors=function()
{if(this.original_colors.length===0){this.original_colors.colors=RGraph.arrayClone(prop.colors);this.original_colors.backgroundGridColor=RGraph.arrayClone(prop.backgroundGridColor);this.original_colors.backgroundColor=RGraph.arrayClone(prop.backgroundColor);this.original_colors.backgroundBarsColor1=RGraph.arrayClone(prop.backgroundBarsColor1);this.original_colors.backgroundBarsColor2=RGraph.arrayClone(prop.backgroundBarsColor2);this.original_colors.textColor=RGraph.arrayClone(prop.textColor);this.original_colors.yaxisLabelsColor=RGraph.arrayClone(prop.yaxisLabelsColor);this.original_colors.colorsStroke=RGraph.arrayClone(prop.colorsStroke);this.original_colors.axesColor=RGraph.arrayClone(prop.axesColor);this.original_colors.highlightFill=RGraph.arrayClone(prop.highlightFill);this.original_colors.highlightStroke=RGraph.arrayClone(prop.highlightStroke);this.original_colors.annotatableColor=RGraph.arrayClone(prop.annotatableColor);}
var colors=prop.colors;for(var i=0;i<colors.length;++i){colors[i]=this.parseSingleColorForGradient(colors[i]);}
prop.backgroundGridColor=this.parseSingleColorForGradient(prop.backgroundGridColor);prop.backgroundColor=this.parseSingleColorForGradient(prop.backgroundColor);prop.backgroundBarsColor1=this.parseSingleColorForGradient(prop.backgroundBarsColor1);prop.backgroundBarsColor2=this.parseSingleColorForGradient(prop.backgroundBarsColor2);prop.textColor=this.parseSingleColorForGradient(prop.textColor);prop.yaxisLabelsColor=this.parseSingleColorForGradient(prop.yaxisLabelsColor);prop.colorsStroke=this.parseSingleColorForGradient(prop.colorsStroke);prop.axesColor=this.parseSingleColorForGradient(prop.axesColor);prop.highlightFill=this.parseSingleColorForGradient(prop.highlightFill);prop.highlightStroke=this.parseSingleColorForGradient(prop.highlightStroke);prop.annotatableColor=this.parseSingleColorForGradient(prop.annotatableColor);};this.reset=function()
{};this.parseSingleColorForGradient=function(color)
{if(!color||typeof(color)!='string'){return color;}
if(color.match(/^gradient\((.*)\)$/i)){if(color.match(/^gradient\(({.*})\)$/i)){return RGraph.parseJSONGradient({object:this,def:RegExp.$1});}
var parts=RegExp.$1.split(':');if(prop.yaxisPosition==='right'){parts=RGraph.arrayReverse(parts);}
var grad=this.context.createLinearGradient(prop.marginLeft,0,this.canvas.width-prop.marginRight,0);var diff=1/(parts.length-1);grad.addColorStop(0,RGraph.trim(parts[0]));for(var j=1;j<parts.length;++j){grad.addColorStop(j*diff,RGraph.trim(parts[j]));}}
return grad?grad:color;};this.interactiveKeyHighlight=function(index)
{var obj=this;this.coords2.forEach(function(value,idx,arr)
{var coords=obj.coords2[idx][index],pre_linewidth=obj.context.lineWidth;obj.path('b lw 2 r % % % % f % s % lw %',coords[0],coords[1],coords[2],coords[3],prop.keyInteractiveHighlightChartFill,prop.keyInteractiveHighlightChartStroke,pre_linewidth);});};this.on=function(type,func)
{if(type.substr(0,2)!=='on'){type='on'+type;}
if(typeof this[type]!=='function'){this[type]=func;}else{RGraph.addCustomEventListener(this,type,func);}
return this;};this.firstDrawFunc=function()
{};this.getShapeByY=function(e)
{var mouseXY=RGraph.getMouseXY(e);var obj=arguments[1]?arguments[1]:this;for(var i=0,len=obj.coords.length;i<len;i++){if(obj.coords[i].length==0){continue;}
var mouseX=mouseXY[0],mouseY=mouseXY[1],left=obj.coords[i][0],top=obj.coords[i][1],width=obj.coords[i][2],height=obj.coords[i][3];if(mouseY>=top&&mouseY<=(top+height)){var indexes=RGraph.sequentialIndexToGrouped(i,this.data);var group=indexes[0];var index=indexes[1];if(prop.tooltips){var tooltip=RGraph.parseTooltipText?RGraph.parseTooltipText(prop.tooltips,i):prop.tooltips[i];}
return{object:obj,x:left,y:top,width:width,height:height,dataset:group,index:index,sequentialIndex:i,tooltip:tooltip||null};}}
return null;};this.adjusting_mousemove=function(e)
{if(prop.adjustable&&RGraph.Registry.get('adjusting')&&RGraph.Registry.get('adjusting').uid==this.uid){var value=Number(this.getValue(e)),shape=RGraph.Registry.get('adjusting.shape');if(shape){RGraph.Registry.set('adjusting.shape',shape);if(this.stackedOrGrouped&&prop.grouping=='grouped'){var indexes=RGraph.sequentialIndexToGrouped(shape.sequentialIndex,this.data);if(typeof this.data[indexes[0]]=='number'){this.data[indexes[0]]=Number(value);}else if(!RGraph.isNull(this.data[indexes[0]])){this.data[indexes[0]][indexes[1]]=Number(value);}}else if(typeof this.data[shape.dataset]=='number'){this.data[shape.dataset]=Number(value);}
RGraph.redrawCanvas(e.target);RGraph.fireCustomEvent(this,'onadjust');}}};this.grow=function()
{var opt=arguments[0]||{},frames=opt.frames||30,frame=0,callback=arguments[1]||function(){},obj=this,labelsAbove=this.get('labelsAbove')
this.original_data=RGraph.arrayClone(this.data);if(prop.xaxisScaleMax==0){var xmax=0;for(var i=0;i<obj.data.length;++i){if(RGraph.isArray(obj.data[i])&&prop.grouping=='stacked'){xmax=Math.max(xmax,RGraph.arraySum(obj.data[i]));}else if(RGraph.isArray(obj.data[i])&&prop.grouping=='grouped'){xmax=Math.max(xmax,RGraph.arrayMax(obj.data[i]));}else{xmax=Math.max(xmax,Math.abs(RGraph.arrayMax(obj.data[i])));}}
var scale2=RGraph.getScale({object:obj,options:{'scale.max':xmax,'scale.round':obj.properties.xaxisScaleRound}});obj.set('xaxisScaleMax',scale2.max);}
if(RGraph.isArray(opt.data)){var xmax=0;for(var i=0;i<opt.data.length;++i){if(typeof opt.data[i]==='object'){for(var j=0;j<opt.data[i].length;++j){if(typeof opt.data[i][j]==='string'&&opt.data[i][j].match(/(\+|\-)([0-9]+)/)){if(RegExp.$1==='+'){opt.data[i][j]=this.original_data[i][j]+parseInt(RegExp.$2);}else{opt.data[i][j]=this.original_data[i][j]-parseInt(RegExp.$2);}}
xmax=Math.max(xmax,opt.data[i][j]);}}else if(typeof opt.data[i]==='string'&&opt.data[i].match(/(\+|\-)([0-9]+)/)){if(RegExp.$1==='+'){opt.data[i]=this.original_data[i]+parseFloat(RegExp.$2);}else{opt.data[i]=this.original_data[i]-parseFloat(RegExp.$2);}
xmax=Math.max(xmax,opt.data[i]);}else{xmax=Math.max(xmax,opt.data[i]);}}
var scale=RGraph.getScale({object:this,options:{'scale.max':xmax}});if(RGraph.isNull(this.get('xaxisScaleMax'))){this.set('xaxisScaleMax',scale.max);}}
this.set('labelsAbove',false);if(RGraph.isNull(prop.xaxisScaleMax)){var xmax=0;for(var i=0;i<obj.data.length;++i){if(RGraph.isArray(this.data[i])&&prop.grouping==='stacked'){xmax=Math.max(xmax,Math.abs(RGraph.arraySum(this.data[i])));}else if(RGraph.isArray(this.data[i])&&prop.grouping==='grouped'){for(var j=0,group=[];j<this.data[i].length;j++){group.push(Math.abs(this.data[i][j]));}
xmax=Math.max(xmax,Math.abs(RGraph.arrayMax(group)));}else{xmax=Math.max(xmax,Math.abs(this.data[i]));}}
var scale=RGraph.getScale({object:this,options:{'scale.max':xmax}});this.set('xaxisScaleMax',scale.max);}
if(typeof opt.xmax==='number'){obj.set('xaxisScaleMax',opt.xmax);}
var iterator=function()
{var easingMultiplier=RGraph.Effects.getEasingMultiplier(frames,frame);for(var j=0,len=obj.original_data.length;j<len;++j){if(typeof obj.data[j]==='object'&&!RGraph.isNull(obj.data[j])){for(var k=0,len2=obj.data[j].length;k<len2;++k){if(obj.firstDraw||!opt.data){obj.data[j][k]=easingMultiplier*obj.original_data[j][k];}else if(opt.data&&opt.data.length===obj.original_data.length){var diff=opt.data[j][k]-obj.original_data[j][k];obj.data[j][k]=(easingMultiplier*diff)+obj.original_data[j][k];}}}else{if(obj.firstDraw||!opt.data){obj.data[j]=easingMultiplier*obj.original_data[j];}else if(opt.data&&opt.data.length===obj.original_data.length){var diff=opt.data[j]-obj.original_data[j];obj.data[j]=(easingMultiplier*diff)+obj.original_data[j];}}}
RGraph.redrawCanvas(obj.canvas);if(frame<frames){frame+=1;RGraph.Effects.updateCanvas(iterator);}else{if(RGraph.isArray(opt.data)){var linear_data=RGraph.arrayLinearize(data);for(var i=0;i<linear_data.length;++i){if(!obj['$'+i]){obj['$'+i]={};}}}
obj.data=data;obj.original_data=RGraph.arrayClone(data);if(labelsAbove){obj.set('labelsAbove',true);RGraph.redraw();}
callback(obj);}};iterator();return this;};this.wave=function()
{var obj=this,opt=arguments[0]||{};opt.frames=opt.frames||60;opt.startFrames=[];opt.counters=[];var framesperbar=opt.frames/3,frame=-1,callback=arguments[1]||function(){},original=RGraph.arrayClone(obj.data),labelsAbove=prop.labelsAbove;this.set('labelsAbove',false);for(var i=0,len=obj.data.length;i<len;i+=1){opt.startFrames[i]=((opt.frames/2)/(obj.data.length-1))*i;if(typeof obj.data[i]==='object'&&obj.data[i]){opt.counters[i]=[];for(var j=0;j<obj.data[i].length;j++){opt.counters[i][j]=0;}}else{opt.counters[i]=0;}}
obj.draw();obj.set('xaxisScaleMax',obj.scale2.max);RGraph.clear(obj.canvas);function iterator()
{++frame;for(var i=0,len=obj.data.length;i<len;i+=1){if(frame>opt.startFrames[i]){if(typeof obj.data[i]==='number'){obj.data[i]=Math.min(Math.abs(original[i]),Math.abs(original[i]*((opt.counters[i]++)/framesperbar)));if(original[i]<0){obj.data[i]*=-1;}}else if(!RGraph.isNull(obj.data[i])){for(var j=0,len2=obj.data[i].length;j<len2;j+=1){obj.data[i][j]=Math.min(Math.abs(original[i][j]),Math.abs(original[i][j]*((opt.counters[i][j]++)/framesperbar)));if(original[i][j]<0){obj.data[i][j]*=-1;}}}}else{obj.data[i]=typeof obj.data[i]==='object'&&obj.data[i]?RGraph.arrayPad([],obj.data[i].length,0):(RGraph.isNull(obj.data[i])?null:0);}}
if(frame>=opt.frames){if(labelsAbove){obj.set('labelsAbove',true);RGraph.redrawCanvas(obj.canvas);}
callback(obj);}else{RGraph.redrawCanvas(obj.canvas);RGraph.Effects.updateCanvas(iterator);}}
iterator();return this;};this.isAdjustable=function(shape)
{if(RGraph.isNull(prop.adjustableOnly)){return true;}
if(RGraph.isArray(prop.adjustableOnly)&&prop.adjustableOnly[shape.sequentialIndex]){return true;}
return false;};RGraph.register(this);RGraph.parseObjectStyleConfig(this,conf.options);};