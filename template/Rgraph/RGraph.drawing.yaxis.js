
RGraph=window.RGraph||{isRGraph:true,isrgraph:true,rgraph:true};RGraph.Drawing=RGraph.Drawing||{};RGraph.Drawing.YAxis=function(conf)
{var id=conf.id
var x=conf.x;this.id=id;this.canvas=document.getElementById(this.id);this.context=this.canvas.getContext("2d");this.canvas.__object__=this;this.x=x;this.coords=[];this.coordsText=[];this.original_colors=[];this.maxLabelLength=0;this.firstDraw=true;this.type='drawing.yaxis';this.isRGraph=true;this.isrgraph=true;this.rgraph=true;this.uid=RGraph.createUID();this.canvas.uid=this.canvas.uid?this.canvas.uid:RGraph.createUID();this.properties={marginTop:25,marginBottom:30,colors:['black'],title:'',titleColor:null,titleFont:null,titleSize:null,titleBold:null,titleItalic:null,textFont:'Arial, Verdana, sans-serif',textSize:12,textColor:'black',textBold:false,textItalic:false,textAccessible:true,textAccessibleOverflow:'visible',textAccessiblePointerevents:false,yaxis:true,yaxisTickmarksCount:5,yaxisTickmarksAlign:'left',yaxisTickmarksLastTop:true,yaxisTickmarksLastBottom:true,yaxisLabelsCount:5,yaxisLabelsSpecific:null,yaxisLabelsFont:null,yaxisLabelsSize:null,yaxisLabelsColor:null,yaxisLabelsBold:null,yaxisLabelsItalic:null,yaxisLabelsOffsetx:0,yaxisLabelsOffsety:0,yaxisScaleMin:0,yaxisScaleMax:null,yaxisScaleFormatter:null,yaxisScaleDecimals:0,yaxisScalePoint:'.',yaxisScaleThousand:',',yaxisScaleInvert:false,yaxisScaleZerostart:true,yaxisScaleVisible:true,yaxisScaleUnitsPre:'',yaxisScaleUnitsPost:'',linewidth:1,tooltips:null,tooltipsEffect:'fade',tooltipsCssClass:'RGraph_tooltip',tooltipsEvent:'onclick',xaxisPosition:'bottom',clearto:'rgba(0,0,0,0)'}
if(!this.canvas){alert('[DRAWING.YAXIS] No canvas support');return;}
this.$0={};if(!this.canvas.__rgraph_aa_translated__){this.context.translate(0.5,0.5);this.canvas.__rgraph_aa_translated__=true;}
var prop=this.properties;this.path=RGraph.pathObjectFunction;if(RGraph.Effects&&typeof RGraph.Effects.decorate==='function'){RGraph.Effects.decorate(this);}
this.set=function(name)
{var value=typeof arguments[1]==='undefined'?null:arguments[1];if(arguments.length===1&&typeof arguments[0]==='object'){for(i in arguments[0]){if(typeof i==='string'){this.set(i,arguments[0][i]);}}
return this;}
prop[name]=value;return this;};this.get=function(name)
{return prop[name];};this.draw=function()
{RGraph.fireCustomEvent(this,'onbeforedraw');this.marginTop=prop.marginTop;this.marginBottom=prop.marginBottom;this.coordsText=[];if(!prop.textColor)prop.textColor=prop.colors[0];if(!prop.titleColor)prop.titleColor=prop.textColor;if(!this.colorsParsed){this.parseColors();this.colorsParsed=true;}
this.drawYAxis();RGraph.installEventListeners(this);if(this.firstDraw){this.firstDraw=false;RGraph.fireCustomEvent(this,'onfirstdraw');this.firstDrawFunc();}
RGraph.fireCustomEvent(this,'ondraw');return this;};this.exec=function(func)
{func(this);return this;};this.getObjectByXY=function(e)
{if(this.getShape(e)){return this;}};this.getShape=function(e)
{var mouseXY=RGraph.getMouseXY(e);var mouseX=mouseXY[0];var mouseY=mouseXY[1];if(mouseX>=this.x-(prop.tickmarksAlign=='right'?0:this.getWidth())&&mouseX<=this.x+(prop.tickmarksAlign=='right'?this.getWidth():0)&&mouseY>=this.marginTop&&mouseY<=(this.canvas.height-this.marginBottom)){var x=this.x;var y=this.marginTop;var w=15;;var h=this.canvas.height-this.marginTop-this.marginBottom;if(RGraph.parseTooltipText&&prop.tooltips){var tooltip=RGraph.parseTooltipText(prop.tooltips[0],0);}
return{object:this,x:x,y:y,width:w,height:h,dataset:0,index:0,sequentialIndex:0,tooltip:typeof tooltip==='string'?tooltip:null};}
return null;};this.highlight=function(shape)
{if(typeof prop.highlightStyle==='function'){(prop.highlightStyle)(shape);}};this.parseColors=function()
{if(this.original_colors.length===0){this.original_colors.yaxisLabelsColor=RGraph.arrayClone(prop.yaxisLabelsColor);this.original_colors.titleColor=RGraph.arrayClone(prop.titleColor);this.original_colors.textColor=RGraph.arrayClone(prop.textColor);this.original_colors.colors=RGraph.arrayClone(prop.colors);}
prop.yaxisLabelsColor=this.parseSingleColorForGradient(prop.yaxisLabelsColor);prop.titleColor=this.parseSingleColorForGradient(prop.titleColor);prop.textColor=this.parseSingleColorForGradient(prop.textColor);prop.colors[0]=this.parseSingleColorForGradient(prop.colors[0]);};this.reset=function()
{};this.parseSingleColorForGradient=function(color)
{if(!color){return color;}
if(typeof color==='string'&&color.match(/^gradient\((.*)\)$/i)){if(color.match(/^gradient\(({.*})\)$/i)){return RGraph.parseJSONGradient({object:this,def:RegExp.$1});}
var parts=RegExp.$1.split(':');var grad=this.context.createLinearGradient(0,prop.marginTop,0,this.canvas.height-this.marginBottom);var diff=1/(parts.length-1);grad.addColorStop(0,RGraph.trim(parts[0]));for(var j=1;j<parts.length;++j){grad.addColorStop(j*diff,RGraph.trim(parts[j]));}}
return grad?grad:color;};this.drawYAxis=function()
{var x=this.x,y=this.marginTop,height=this.canvas.height-this.marginBottom-this.marginTop,min=+prop.yaxisScaleMin?+prop.yaxisScaleMin:0,max=+prop.yaxisScaleMax,title=prop.yaxisTitle?prop.yaxisTitle:'',color=prop.colors?prop.colors[0]:'black',title_color=prop.yaxisTitleColor?prop.yaxisTitleColor:color,label_color=prop.textColor?prop.textColor:color,label_offsetx=prop.yaxisLabelsOffsetx,label_offsety=prop.yaxisLabelsOffsety,numticks=typeof prop.yaxisTickmarksCount==='number'?prop.yaxisTickmarksCount:10,labels_specific=prop.yaxisLabelsSpecific,numlabels=prop.yaxisLabelsCount?prop.yaxisLabelsCount:5,font=prop.textFont?prop.textFont:'Arial, Verdana, sans-serif',size=prop.textSize?prop.textSize:12
align=typeof prop.yaxisTickmarksAlign==='string'?prop.yaxisTickmarksAlign:'left',formatter=prop.yaxisScaleFormatter,decimals=prop.yaxisScaleDecimals,invert=prop.yaxisScaleInvert,scale_visible=prop.yaxisScaleVisible,units_pre=prop.yaxisScaleUnitsPre,units_post=prop.yaxisScaleUnitsPost,linewidth=prop.linewidth?prop.linewidth:1,notopendtick=!prop.yaxisTickmarksLastTop,nobottomendtick=!prop.yaxisTickmarksLastBottom,yaxis=prop.yaxis,xaxispos=prop.xaxisPosition;this.context.lineWidth=linewidth+0.001;this.context.strokeStyle=color;if(yaxis){this.path({path:'b m % % l % % s %',args:[Math.round(x),y,Math.round(x),y+height,color]});if(numticks){var gap=(xaxispos=='center'?height/2:height)/numticks;var halfheight=height/2;this.context.beginPath();for(var i=(notopendtick?1:0);i<=(numticks-(nobottomendtick||xaxispos=='center'?1:0));++i){this.path({path:'m % % l % %',args:[align=='right'?x+3:x-3,Math.round(y+(gap*i)),x,Math.round(y+(gap*i))]});}
if(xaxispos=='center'){for(var i=1;i<=numticks-(nobottomendtick?1:0);++i){this.path({path:'m % % l % %',args:[align=='right'?x+3:x-3,Math.round(y+halfheight+(gap*i)),x,Math.round(y+halfheight+(gap*i))]});}}
this.context.stroke();}}
this.context.fillStyle=label_color;var text_len=0;if(scale_visible){if(labels_specific&&labels_specific.length){var text_len=0;for(var i=0,len=labels_specific.length;i<len;i+=1){text_len=Math.max(text_len,this.context.measureText(labels_specific[i]).width);}
var textConf=RGraph.getTextConf({object:this,prefix:'yaxisLabels'});for(var i=0,len=labels_specific.length;i<len;++i){var gap=(len-1)>0?(height/(len-1)):0;if(xaxispos=='center'){gap/=2;}
RGraph.text({object:this,font:textConf.font,size:textConf.size,bold:textConf.bold,italic:textConf.italic,color:textConf.color,x:x-(align=='right'?-5:5)+label_offsetx,y:(i*gap)+this.marginTop+label_offsety,text:labels_specific[i],valign:'center',halign:align=='right'?'left':'right',tag:'scale'});this.maxLabelLength=Math.max(this.maxLabelLength,this.context.measureText(labels_specific[i]).width*2);}
if(xaxispos=='center'){for(var i=(labels_specific.length-2);i>=0;--i){RGraph.text({object:this,font:textConf.font,size:textConf.size,bold:textConf.bold,italic:textConf.italic,color:textConf.color,x:x-(align=='right'?-5:5)+label_offsetx,y:this.canvas.height-this.marginBottom-(i*gap)+label_offsety,text:labels_specific[i],valign:'center',halign:align=='right'?'left':'right',tag:'scale'});}}}else{var textConf=RGraph.getTextConf({object:this,prefix:'yaxisLabels'});for(var i=0;i<=numlabels;++i){var original=((max-min)*((numlabels-i)/numlabels))+min;if(original==0&&prop.yaxisScaleZerostart==false){continue;}
var text=RGraph.numberFormat({object:this,number:original.toFixed(original===0?0:decimals),unitspre:units_pre,unitspost:units_post,point:prop.yaxisScalePoint,thousand:prop.yaxisScaleThousand});var text=String(typeof formatter=='function'?formatter(this,original):text);var text_len=Math.max(text_len,this.context.measureText(text).width*2);this.maxLabelLength=text_len;if(invert){var y=height-((height/numlabels)*i);}else{var y=(height/numlabels)*i;}
if(prop.xaxisPosition=='center'){y=y/2;}
text=text.replace(/^-,([0-9])/,'-$1');RGraph.text({object:this,font:textConf.font,size:textConf.size,bold:textConf.bold,italic:textConf.italic,color:textConf.color,x:x-(align=='right'?-5:5)+label_offsetx,y:y+this.marginTop+label_offsety,text:text,valign:'center',halign:align=='right'?'left':'right',tag:'scale'});if(prop.xaxisPosition=='center'&&i<numlabels){RGraph.text({object:this,font:textConf.font,size:textConf.size,bold:textConf.bold,italic:textConf.italic,color:textConf.color,x:x-(align=='right'?-5:5)+label_offsetx,y:this.canvas.height-this.marginBottom-y+label_offsety,text:'-'+text,valign:'center',halign:align=='right'?'left':'right',tag:'scale'});}}}}
if(title){this.context.beginPath();this.context.fillStyle=title_color;if(labels_specific){var width=0;for(var i=0,len=labels_specific.length;i<len;i+=1){width=Math.max(width,this.context.measureText(labels_specific[i]).width);}}else{var m=RGraph.measureText(prop.yaxisScaleUnitsPre+prop.yaxisScaleMax.toFixed(prop.yaxisScaleDecimals)+prop.yaxisScaleUnitsPost),width=m[0];}
var textConf=RGraph.getTextConf({object:this,prefix:'yaxisTitle'});RGraph.text({object:this,font:textConf.font,size:textConf.size,bold:textConf.bold,italic:textConf.italic,color:textConf.color,x:align=='right'?x+width+13:x-width-13,y:height/2+this.marginTop,text:title,valign:'bottom',halign:'center',angle:align=='right'?90:-90,accessible:false});this.context.stroke();}};this.getWidth=function()
{var width=this.maxLabelLength;if(prop.yaxisTitle&&prop.yaxisTitle.length){width+=(prop.textSize*1.5);}
this.width=width;return width;};this.on=function(type,func)
{if(type.substr(0,2)!=='on'){type='on'+type;}
if(typeof this[type]!=='function'){this[type]=func;}else{RGraph.addCustomEventListener(this,type,func);}
return this;};this.firstDrawFunc=function()
{};RGraph.register(this);RGraph.parseObjectStyleConfig(this,conf.options);};