
RGraph=window.RGraph||{isrgraph:true,isRGraph:true,rgraph:true};RGraph.Waterfall=function(conf)
{this.id=conf.id;this.canvas=document.getElementById(this.id);this.context=this.canvas.getContext?this.canvas.getContext("2d"):null;this.canvas.__object__=this;this.type='waterfall';this.max=0;this.data=conf.data;this.isRGraph=true;this.isrgraph=true;this.rgraph=true;this.coords=[];this.uid=RGraph.createUID();this.canvas.uid=this.canvas.uid?this.canvas.uid:RGraph.createUID();this.colorsParsed=false;this.coordsText=[];this.original_colors=[];this.firstDraw=true;this.properties={backgroundBarsCount:null,backgroundBarsColor1:'rgba(0,0,0,0)',backgroundBarsColor2:'rgba(0,0,0,0)',backgroundGrid:true,backgroundGridAutofit:true,backgroundGridAutofitAlign:true,backgroundGridColor:'#ddd',backgroundGridLinewidth:1,backgroundGridHsize:20,backgroundGridVsize:20,backgroundGridVlines:true,backgroundGridHlines:true,backgroundGridBorder:true,backgroundGridAlign:true,backgroundGridHlinesCount:5,backgroundGridVlinesCount:20,backgroundImage:null,backgroundImageStretch:true,backgroundImageX:null,backgroundImageY:null,backgroundImageW:null,backgroundImageH:null,backgroundImageAlign:null,backgroundHbars:null,linewidth:1,axes:true,axesLinewidth:1,axesColor:'black',colorsStroke:'#666',colors:['green','red','blue'],colorsSequential:false,marginLeft:35,marginRight:35,marginTop:35,marginBottom:35,marginInner:5,xaxis:true,xaxisPosition:'bottom',xaxisTickmarksCount:null,xaxisTitle:'',xaxisTitlePos:null,xaxisTitleBold:null,xaxisTitleItalic:null,xaxisTitleSize:null,xaxisTitleFont:null,xaxisTitleColor:null,xaxisTitleX:null,xaxisTitleY:null,xaxisLabels:[],xaxisLabelsBold:null,xaxisLabelsColor:null,xaxisLabelsFont:null,xaxisLabelsItalic:null,xaxisLabelsSize:null,xaxisLabelsOffsetx:0,xaxisLabelsOffsety:0,xaxisLabelsAngle:0,yaxis:true,yaxisTickmarksCount:10,yaxisTitle:'',yaxisTitleBold:null,yaxisTitleItalic:null,yaxisTitleSize:null,yaxisTitleFont:null,yaxisTitleColor:null,yaxisTitlePos:null,yaxisTitleAlign:'left',yaxisTitleX:null,yaxisTitleY:null,yaxisLabels:true,yaxisLabelsCount:5,yaxisLabelsOffsetx:0,yaxisLabelsOffsety:0,yaxisLabelsFont:null,yaxisLabelsSize:null,yaxisLabelsColor:null,yaxisLabelsBold:null,yaxisLabelsItalic:null,yaxisScaleMax:null,yaxisScaleMin:0,yaxisScaleUnitsPre:'',yaxisScaleUnitsPost:'',yaxisScaleDecimals:0,yaxisScalePoint:'.',yaxisScaleThousand:',',yaxisScaleZerostart:true,yaxisScaleFormatter:null,labelsAbove:false,labelsAboveFont:null,labelsAboveSize:null,labelsAboveBold:null,labelsAboveItalic:null,labelsAboveColor:null,labelsAboveOffsetx:0,labelsAboveOffsety:0,labelsAboveSpecific:null,labelsAboveDecimals:0,labelsAboveUnitsPre:'',labelsAboveUnitsPost:'',labelsAbovePoint:'.',labelsAboveThousand:',',labelsAboveFormatter:null,labelsAboveTotalItalic:null,labelsAboveTotalBold:null,labelsAboveTotalSize:null,labelsAboveTotalFont:null,labelsAboveTotalColor:null,labelsAboveTotalDecimals:null,labelsAboveTotalUnitsPre:null,labelsAboveTotalUnitsPost:null,labelsAboveTotalPoint:null,labelsAboveTotalThousand:null,labelsAboveTotalFormatter:null,textColor:'black',textSize:12,textFont:'Arial, Verdana, sans-serif',textBold:false,textItalic:false,textAccessible:true,textAccessibleOverflow:'visible',textAccessiblePointerevents:false,title:'',titleColor:'black',titleBackground:null,titleHpos:null,titleVpos:null,titleBold:null,titleFont:null,titleSize:null,titleItalic:null,titleColor:null,titleX:null,titleY:null,titleHalign:null,titleValign:null,shadow:false,shadowColor:'#666',shadowOffsetx:3,shadowOffsety:3,shadowBlur:3,tooltips:null,tooltipsEffect:'fade',tooltipsCssClass:'RGraph_tooltip',tooltipsEvent:'onclick',tooltipsHighlight:true,tooltipsOverride:null,highlightStroke:'rgba(0,0,0,0)',highlightFill:'rgba(255,255,255,0.7)',contextmenu:null,crosshairs:false,crosshairsColor:'#333',crosshairsHline:true,crosshairsVline:true,annotatable:false,annotatableLinewidth:1,annotatableColor:'black',resizable:false,resizableHandleBackground:null,total:true,multiplierX:1,multiplierW:1,key:null,keyBackground:'white',keyPosition:'graph',keyHalign:'right',keyShadow:false,keyShadowColor:'#666',keyShadowBlur:3,keyShadowOffsetx:2,keyShadowOffsety:2,keyPositionGutterBoxed:false,keyPositionX:null,keyPositionY:null,keyColorShape:'square',keyRounded:true,keyLinewidth:1,keyColors:null,keyInteractive:false,keyInteractiveHighlightChartStroke:'#000',keyInteractiveHighlightChartFill:'rgba(255,255,255,0.7)',keyInteractiveHighlightLabel:'rgba(255,0,0,0.2)',keyLabelsColor:null,keyLabelsFont:null,keyLabelsSize:null,keyLabelsBold:null,keyLabelsItalic:null,keyLabelsOffsetx:0,keyLabelsOffsety:0,barOffsetx:0,barOffsety:0,clearto:'rgba(0,0,0,0)'}
if(!this.canvas){alert('[WATERFALL] No canvas support');return;}
for(var i=0,len=this.data.length;i<=len;++i){this['$'+i]={}
if(typeof this.data[i]==='string'){this.data[i]=parseFloat(this.data[i]);}}
if(!this.canvas.__rgraph_aa_translated__){this.context.translate(0.5,0.5);this.canvas.__rgraph_aa_translated__=true;}
var prop=this.properties;this.path=RGraph.pathObjectFunction;if(RGraph.Effects&&typeof RGraph.Effects.decorate==='function'){RGraph.Effects.decorate(this);}
this.responsive=RGraph.responsive;this.set=function(name)
{var value=typeof arguments[1]==='undefined'?null:arguments[1];if(arguments.length===1&&typeof arguments[0]==='object'){for(i in arguments[0]){if(typeof i==='string'){this.set(i,arguments[0][i]);}}
return this;}
prop[name]=value;return this;};this.get=function(name)
{return prop[name];};this.draw=function()
{RGraph.fireCustomEvent(this,'onbeforedraw');if(!this.colorsParsed){this.parseColors();this.colorsParsed=true;}
RGraph.drawBackgroundImage(this);this.marginLeft=prop.marginLeft;this.marginRight=prop.marginRight;this.marginTop=prop.marginTop;this.marginBottom=prop.marginBottom;this.coords=[];this.coordsText=[];this.centery=((this.canvas.height-this.marginTop-this.marginBottom)/2)+this.marginTop;this.max=0;this.grapharea=this.canvas.height-this.marginTop-this.marginBottom;this.graphwidth=this.canvas.width-this.marginLeft-this.marginRight;this.halfTextHeight=prop.textSize/2;this.max=this.getMax(this.data);var decimals=prop.yaxisScaleDecimals;this.scale2=RGraph.getScale({object:this,options:{'scale.max':typeof(prop.yaxisScaleMax)=='number'?prop.yaxisScaleMax:this.max,'scale.min':prop.yaxisScaleMin,'scale.strict':typeof(prop.yaxisScaleMax)==='number'?true:false,'scale.decimals':Number(decimals),'scale.point':prop.yaxisScalePoint,'scale.thousand':prop.yaxisScaleThousand,'scale.round':prop.yaxisScaleRound,'scale.units.pre':prop.yaxisScaleUnitsPre,'scale.units.post':prop.yaxisScaleUnitsPost,'scale.labels.count':prop.yaxisLabelsCount,'scale.formatter':prop.yaxisScaleFormatter}});this.max=this.scale2.max;this.min=this.scale2.min;RGraph.drawBars(this)
RGraph.Background.draw(this);this.drawAxes();this.drawBars();this.drawLabels();if(prop.xaxisPosition==='bottom'&&prop.axes&&prop.xaxis&&prop.yaxisScaleMin===0){this.context.strokeStyle=prop.axesColor;this.context.strokeRect(prop.marginLeft,this.canvas.height-this.marginBottom,this.canvas.width-this.marginLeft-this.marginRight,0);}
if(prop.contextmenu){RGraph.showContext(this);}
if(prop.resizable){RGraph.allowResizing(this);}
RGraph.installEventListeners(this);if(prop.key&&prop.key.length){RGraph.drawKey(this,prop.key,prop.colors);}
if(this.firstDraw){this.firstDraw=false;RGraph.fireCustomEvent(this,'onfirstdraw');this.firstDrawFunc();}
RGraph.fireCustomEvent(this,'ondraw');return this;};this.drawAxes=function()
{if(!prop.axes){return;}
this.context.beginPath();this.context.strokeStyle=prop.axesColor;this.context.lineWidth=prop.axesLinewidth+0.001;if(prop.yaxis){this.context.moveTo(Math.round(this.marginLeft),this.marginTop);this.context.lineTo(Math.round(this.marginLeft),this.canvas.height-this.marginBottom);}
if(prop.xaxis){if(prop.xaxisPosition=='center'){this.context.moveTo(this.marginLeft,Math.round(((this.canvas.height-this.marginTop-this.marginBottom)/2)+this.marginTop));this.context.lineTo(this.canvas.width-this.marginRight,Math.round(((this.canvas.height-this.marginTop-this.marginBottom)/2)+this.marginTop));}else{var y=Math.floor(this.getYCoord(0));this.context.moveTo(this.marginLeft,y);this.context.lineTo(this.canvas.width-this.marginRight,y);}}
var numYTicks=prop.yaxisTickmarksCount;if(prop.yaxis&&prop.yaxisTickmarksCount>0){var yTickGap=(this.canvas.height-this.marginTop-this.marginBottom)/numYTicks;for(y=this.marginTop;y<(this.canvas.height-this.marginBottom);y+=yTickGap){if(prop.xaxisPosition=='bottom'||(y!=((this.canvas.height-this.marginTop-this.marginBottom)/2)+this.marginTop)){this.context.moveTo(this.marginLeft,Math.round(y));this.context.lineTo(this.marginLeft-3,Math.round(y));}}
if(!prop.xaxis||prop.xaxisPosition=='center'||prop.yaxisScaleMin!==0){this.context.moveTo(this.marginLeft-3,Math.round(this.canvas.height-this.marginBottom));this.context.lineTo(this.marginLeft,Math.round(this.canvas.height-this.marginBottom));}}
if(prop.xaxisTickmarksCount==null){prop.xaxisTickmarksCount=this.data.length+(prop.total?1:0)}
if(prop.xaxis&&prop.xaxisTickmarksCount>0){xTickGap=(this.canvas.width-this.marginLeft-this.marginRight)/prop.xaxisTickmarksCount;if(prop.xaxisPosition=='center'){yStart=((this.canvas.height-this.marginBottom-this.marginTop)/2)+this.marginTop-3;yEnd=((this.canvas.height-this.marginBottom-this.marginTop)/2)+this.marginTop+3;}else{yStart=this.getYCoord(0)-(this.scale2.min<0?3:0);yEnd=this.getYCoord(0)+3;}
for(x=this.marginLeft+xTickGap;x<=this.canvas.width-this.marginRight+1;x+=xTickGap){this.context.moveTo(Math.round(x),yStart);this.context.lineTo(Math.round(x),yEnd);}
if(!prop.yaxis){this.context.moveTo(Math.round(this.marginLeft),yStart);this.context.lineTo(Math.round(this.marginLeft),yEnd);}}
if(!prop.yaxis&&prop.xaxis){this.context.moveTo(Math.round(this.marginLeft),this.getYCoord(0));this.context.lineTo(Math.round(this.marginLeft),this.getYCoord(0));}
this.context.stroke();};this.drawLabels=function()
{var context=this.context,numYLabels=5,interval=this.grapharea/numYLabels,italic=prop.textItalic,bold=prop.textBold,font=prop.textFont,size=prop.textSize,color=prop.textColor,units_pre=prop.yaxisScaleUnitsPre,units_post=prop.yaxisScaleUnitsPost,offsetx=prop.yaxisLabelsOffsetx,offsety=prop.yaxisLabelsOffsety;this.context.beginPath();this.context.fillStyle=color;var textConf=RGraph.getTextConf({object:this,prefix:'yaxisLabels'});if(prop.yaxisLabels){if(prop.xaxisPosition=='center'){var halfInterval=interval/2;var halfWay=((this.canvas.height-this.marginTop-this.marginBottom)/2)+this.marginTop;for(var i=0,len=this.scale2.labels.length;i<len;++i){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft-5+offsetx,y:this.marginTop+(((this.grapharea/2)/len)*i)+offsety,text:this.scale2.labels[len-i-1],valign:'center',halign:'right',tag:'scale'});RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft-5+offsetx,y:halfWay+(((this.grapharea/2)/len)*(i+1))+offsety,text:this.scale2.labels[i],valign:'center',halign:'right',tag:'scale'});}
if(prop.yaxisScaleZerostart){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft-5+offsetx,y:halfWay,text:'0',valign:'center',halign:'right',tag:'scale'});}}else{for(var i=0,len=this.scale2.values.length;i<len;++i){var y=this.getYCoord(this.scale2.values[i])+offsety;RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft-5+offsetx,y:y,text:this.scale2.labels[i],valign:'center',halign:'right',tag:'scale'});}
if(prop.yaxisScaleZerostart||prop.yaxisScaleMin!==0){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft-5+offsetx,y:this.getYCoord(prop.yaxisScaleMin||0),text:RGraph.numberFormat({object:this,number:String(Number(prop.yaxisScaleMin||0).toFixed(prop.yaxisScaleMin===0?0:prop.yaxisScaleDecimals)),unitspre:prop.yaxisScaleUnitsPre,unitspost:prop.yaxisScaleUnitsPost}),valign:'center',halign:'right',tag:'scale'});}}}
if(prop.xaxisLabels.length>0){interval=(this.canvas.width-this.marginLeft-this.marginRight)/prop.xaxisLabels.length;var halign='center',valign='top',angle=prop.xaxisLabelsAngle;if(angle){halign='right';angle*=-1;}
var labels=prop.xaxisLabels,offsetx=prop.xaxisLabelsOffsetx,offsety=prop.xaxisLabelsOffsety;var textConf=RGraph.getTextConf({object:this,prefix:'xaxisLabels'});for(var i=0,len=labels.length;i<len;i+=1){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.marginLeft+(i*interval)+(interval/2)+offsetx,y:this.canvas.height-this.marginBottom+this.halfTextHeight+offsety,text:labels[i],valign:valign,halign:halign,angle:angle,tag:'labels'});}}
this.context.stroke();this.context.fill();if(prop.labelsAbove){this.drawLabelsAbove();}};this.drawLabelsAbove=function()
{var data=this.data,unitsPre=prop.labelsAboveUnitsPre,unitsPost=prop.labelsAboveUnitsPost,decimals=prop.labelsAboveDecimals,thousand=prop.labelsAboveThousand,point=prop.labelsAbovePoint,formatter=prop.labelsAboveFormatter;var textConf=RGraph.getTextConf({object:this,prefix:'labelsAbove'});for(var i=0;i<this.data.length+(prop.total?1:0);++i){if(prop.total&&i===this.data.length){var isTotal=true;}
var value=Number(isTotal?this.total:this.data[i]);if(typeof prop.labelsAboveColor==='object'&&prop.labelsAboveColor){if(isTotal&&typeof prop.labelsAboveColor[2]==='string'){color=prop.labelsAboveColor[2];}else if(this.data[i]<0){color=prop.labelsAboveColor[1];}else{color=prop.labelsAboveColor[0];}}
if(typeof prop.labelsAboveTotalColor==='object'&&prop.labelsAboveTotalColor){if(isTotal&&typeof prop.labelsAboveTotalColor[0]==='string'&&typeof prop.labelsAboveTotalColor[1]==='string'){if(this.total<0){color=prop.labelsAboveTotalColor[1];}else{color=prop.labelsAboveTotalColor[0];}}}
var coords=this.coords[i];var tmpScaleThousand=prop.yaxisScaleThousand,tmpScalePoint=prop.yaxisScaleDecimal;prop.yaxisScaleThousand=prop.labelsAboveThousand;prop.yaxisScalePoint=prop.labelsAbovePoint;if(formatter){var str=(formatter)({object:this,value:value,index:i});}else{var str=RGraph.numberFormat({object:this,number:String(value.toFixed(decimals)),unitspre:unitsPre,unitspost:unitsPost,point:point,thousand:thousand});}
if(isTotal||i===this.data.length){if(typeof prop.labelsAboveTotalFont==='string')textConf.font=prop.labelsAboveTotalFont;if(typeof prop.labelsAboveTotalColor==='string')textConf.color=prop.labelsAboveTotalColor;if(typeof prop.labelsAboveTotalSize==='number')textConf.size=prop.labelsAboveTotalSize;if(!RGraph.isNull(prop.labelsAboveTotalBold))textConf.bold=prop.labelsAboveTotalBold;if(!RGraph.isNull(prop.labelsAboveTotalItalic))textConf.italic=prop.labelsAboveTotalItalic;if(typeof prop.labelsAboveTotalUnitsPre==='string')unitsPre=prop.labelsAboveTotalUnitsPre;if(typeof prop.labelsAboveTotalUnitsPost==='string')unitsPost=prop.labelsAboveTotalUnitsPost;if(typeof prop.labelsAboveTotalDecimals==='number')decimals=prop.labelsAboveTotalDecimals;if(typeof prop.labelsAboveTotalFormatter==='function')formatter=prop.labelsAboveTotalFormatter;if(typeof prop.labelsAboveTotalThousand==='string')thousand=prop.labelsAboveTotalThousand;if(typeof prop.labelsAboveTotalPoint==='string')point=prop.labelsAboveTotalPoint;if(formatter){var str=(formatter)({object:this,value:value,index:i});}else{str=RGraph.numberFormat({object:this,number:String(value.toFixed(decimals)),unitspre:unitsPre,unitspost:unitsPost,point:point,thousand:thousand});}
prop.yaxisScaleThousand=tmpScaleThousand;prop.yaxisScalePoint=tmpScalePoint;}
if(typeof prop.labelsAboveSpecific==='object'&&!RGraph.isNull(prop.labelsAboveSpecific)){if(typeof prop.labelsAboveSpecific[i]==='string'||typeof prop.labelsAboveSpecific[i]==='number'){str=prop.labelsAboveSpecific[i];}else{str='';}}
RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:coords[0]+(coords[2]/2)+prop.labelsAboveOffsetx,y:(isTotal?this.total:this.data[i])>=0?(coords[1]-3-prop.labelsAboveOffsety):(coords[1]+coords[3]+3+prop.labelsAboveOffsety),text:str,valign:(isTotal?this.total:this.data[i])>=0?'bottom':'top',halign:'center',tag:'labels.above'});}};this.drawBars=function()
{var context=this.context,canvas=this.canvas,hmargin=prop.marginInner,runningTotal=0;this.context.lineWidth=prop.linewidth+0.001;for(var i=0,len=this.data.length,seq=0;i<len;++i,++seq){this.context.beginPath();this.context.strokeStyle=prop.colorsStroke;var x=Math.round(this.marginLeft+hmargin+(((this.graphwidth/(this.data.length+(prop.total?1:0)))*i)*prop.multiplierX));var h=this.getYCoord(0)-this.getYCoord(Math.abs(this.data[i]));if(i===0){y=this.getYCoord(0)-h;}else{y=this.getYCoord(runningTotal)-h;}
y=Math.round(y);var w=((this.canvas.width-this.marginLeft-this.marginRight)/(this.data.length+(prop.total?1:0)))-(2*prop.marginInner);w=w*prop.multiplierW;if(this.data[i]<0){y+=h;}
if(prop.colorsSequential){this.context.fillStyle=prop.colors[seq];}else{this.context.fillStyle=this.data[i]>=0?prop.colors[0]:prop.colors[1];}
if(prop.shadow){RGraph.setShadow({object:this,prefix:'shadow'});}else{RGraph.noShadow(this);}
this.context.rect(x+prop.barOffsetx,Math.floor(y)+prop.barOffsety,w,Math.floor(h));this.coords.push([x,y,w,h]);runningTotal+=this.data[i];this.context.stroke();this.context.fill();}
this.total=runningTotal;if(prop.total){h=this.getYCoord(0)-this.getYCoord(Math.abs(runningTotal));if(prop.xaxisPosition=='center'){y=runningTotal>0?this.getYCoord(0)-h:this.getYCoord(0);}else{if(runningTotal>0){y=this.getYCoord(0)-h;}else{y=this.getYCoord(0);}}
x=x+(prop.marginInner*2)+w;if(prop.colorsSequential){this.context.fillStyle=prop.colors[seq]}else{this.context.fillStyle=prop.colors[2];}
this.path({path:'b r % % % % s % f %',args:[x+prop.barOffsetx,y+prop.barOffsety,w,h,this.context.strokeStyle,this.context.fillStyle]});var previousCoords=[x,y,w,Math.abs(h)];this.coords.push(previousCoords);}
RGraph.noShadow(this);this.context.lineWidth=1;this.context.strokeStyle='#666';this.context.beginPath();for(var i=1,len=this.coords.length;i<len;i+=1){var prev=this.coords[i-1],curr=this.coords[i],prevData=this.data[i-1];var y=(prevData>0?prev[1]:prev[1]+prev[3]);this.context.moveTo(prev[0]+prev[2]+prop.barOffsetx,y+prop.barOffsety);this.context.lineTo(curr[0]+prop.barOffsetx,(prevData>0?prev[1]:prev[1]+prev[3])+prop.barOffsety);}
this.context.stroke();};this.getShape=function(e)
{for(var i=0,len=this.coords.length;i<len;i++){var mouseXY=RGraph.getMouseXY(e),mouseX=mouseXY[0],mouseY=mouseXY[1];var left=this.coords[i][0],top=this.coords[i][1],width=this.coords[i][2],height=this.coords[i][3];if(mouseX>=left&&mouseX<=(left+width)&&mouseY>=top&&mouseY<=top+height){var tooltip=RGraph.parseTooltipText(prop.tooltips,i);return{object:this,x:left,y:top,width:width,height:height,index:i,dataset:0,sequentialIndex:i,tooltip:typeof tooltip==='string'?tooltip:null};}}
return null;};this.getMax=function(data)
{var runningTotal=0,max=0;for(var i=0,len=data.length;i<len;i+=1){runningTotal+=data[i];max=Math.max(Math.abs(runningTotal),max);}
return Math.abs(max);};this.allowTooltips=function()
{RGraph.preLoadTooltipImages(this);RGraph.installWindowMousedownTooltipListener(this);RGraph.installCanvasMousemoveTooltipListener(this);RGraph.installCanvasMouseupTooltipListener(this);};this.highlight=function(shape)
{if(typeof prop.highlightStyle==='function'){(prop.highlightStyle)(shape);}else{RGraph.Highlight.rect(this,shape);}};this.getObjectByXY=function(e)
{var mouseXY=RGraph.getMouseXY(e);if(mouseXY[0]>this.marginLeft&&mouseXY[0]<(this.canvas.width-this.marginRight)&&mouseXY[1]>this.marginTop&&mouseXY[1]<(this.canvas.height-this.marginBottom)){return this;}};this.getYCoord=function(value)
{if(prop.xaxisPosition=='center'){if(value<(-1*this.max)){return null;}
var coord=(value/this.max)*(this.grapharea/2);return this.marginTop+(this.grapharea/2)-coord;}else{var coord=((value-this.scale2.min)/(this.max-this.scale2.min))*this.grapharea;coord=coord+this.marginBottom;return this.canvas.height-coord;}};this.parseColors=function()
{if(this.original_colors.length===0){this.original_colors.colors=RGraph.arrayClone(prop.colors);this.original_colors.keyColors=RGraph.arrayClone(prop.keyColors);this.original_colors.crosshairsColor=RGraph.arrayClone(prop.crosshairsColor);this.original_colors.highlightStroke=RGraph.arrayClone(prop.highlightStroke);this.original_colors.highlightFill=RGraph.arrayClone(prop.highlightFill);this.original_colors.backgroundBarsColor1=RGraph.arrayClone(prop.backgroundBarsColor1);this.original_colors.backgroundBarsColor2=RGraph.arrayClone(prop.backgroundBarsColor2);this.original_colors.backgroundGridColor=RGraph.arrayClone(prop.backgroundGridColor);this.original_colors.colorsStroke=RGraph.arrayClone(prop.colorsStroke);this.original_colors.axesColor=RGraph.arrayClone(prop.axesColor);}
var colors=prop.colors;if(colors){for(var i=0,len=colors.length;i<len;++i){colors[i]=this.parseSingleColorForGradient(colors[i]);}}
var colors=prop.keyColors;if(colors){for(var i=0,len=colors.length;i<len;++i){colors[i]=this.parseSingleColorForGradient(colors[i]);}}
prop.crosshairsColor=this.parseSingleColorForGradient(prop.crosshairsColor);prop.highlightStroke=this.parseSingleColorForGradient(prop.highlightStroke);prop.highlightFill=this.parseSingleColorForGradient(prop.highlightFill);prop.backgroundBarsColor1=this.parseSingleColorForGradient(prop.backgroundBarsColor1);prop.backgroundBarsColor2=this.parseSingleColorForGradient(prop.backgroundBarsColor2);prop.backgroundGridColor=this.parseSingleColorForGradient(prop.backgroundGridColor);prop.colorsStroke=this.parseSingleColorForGradient(prop.colorsStroke);prop.axesColor=this.parseSingleColorForGradient(prop.axesColor);};this.reset=function()
{};this.parseSingleColorForGradient=function(color)
{if(!color||typeof color!='string'){return color;}
if(typeof color==='string'&&color.match(/^gradient\((.*)\)$/i)){if(color.match(/^gradient\(({.*})\)$/i)){return RGraph.parseJSONGradient({object:this,def:RegExp.$1});}
var parts=RegExp.$1.split(':');var grad=this.context.createLinearGradient(0,this.canvas.height-prop.marginBottom,0,prop.marginTop);var diff=1/(parts.length-1);grad.addColorStop(0,RGraph.trim(parts[0]));for(var j=1,len=parts.length;j<len;++j){grad.addColorStop(j*diff,RGraph.trim(parts[j]));}}
return grad?grad:color;};this.on=function(type,func)
{if(type.substr(0,2)!=='on'){type='on'+type;}
if(typeof this[type]!=='function'){this[type]=func;}else{RGraph.addCustomEventListener(this,type,func);}
return this;};this.exec=function(func)
{func(this);return this;};this.firstDrawFunc=function()
{};this.grow=function()
{var opt=arguments[0]||{};var callback=arguments[1]||function(){};var frames=opt.frames||30;var numFrame=0;var obj=this;var data=RGraph.arrayClone(obj.data);for(var i=0,len=obj.data.length;i<len;++i){obj.data[i]/=frames;}
if(obj.get('yaxisScaleMax')==null){var max=obj.getMax(data);var scale2=RGraph.getScale({object:obj,options:{'scale.max':max}});obj.set('yaxisScaleMax',scale2.max);}
function iterator()
{for(var i=0;i<obj.data.length;++i){obj.data[i]=data[i]*RGraph.Effects.getEasingMultiplier(frames,numFrame);}
RGraph.clear(obj.canvas);RGraph.redrawCanvas(obj.canvas);if(++numFrame<=frames){RGraph.Effects.updateCanvas(iterator);}else{callback(obj);}}
iterator();return this;};RGraph.register(this);RGraph.parseObjectStyleConfig(this,conf.options);return this;};