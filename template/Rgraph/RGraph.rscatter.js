
RGraph=window.RGraph||{isrgraph:true,isRGraph:true,rgraph:true};RGraph.RScatter=function(conf)
{this.data=new Array(conf.data.length);this.data=RGraph.arrayClone(conf.data);if(typeof conf.data==='object'&&typeof conf.data[0]==='object'&&typeof conf.data[0][0]==='number'){var tmp=RGraph.arrayClone(conf.data);conf.data=new Array();conf.data[0]=RGraph.arrayClone(tmp);this.data=RGraph.arrayClone(conf.data);}
this.id=conf.id
this.canvas=document.getElementById(this.id)
this.context=this.canvas.getContext?this.canvas.getContext("2d"):null;this.canvas.__object__=this;this.type='rscatter';this.hasTooltips=false;this.isRGraph=true;this.isrgraph=true;this.rgraph=true;this.uid=RGraph.createUID();this.canvas.uid=this.canvas.uid?this.canvas.uid:RGraph.createUID();this.colorsParsed=false;this.coordsText=[];this.original_colors=[];this.firstDraw=true;this.centerx=0;this.centery=0;this.radius=0;this.max=0;for(var i=0;i<this.data.length;++i){for(var j=0;j<this.data[i].length;++j){if(typeof this.data[i][j][0]==='string'){this.data[i][j][0]=parseFloat(this.data[i][j][0]);}
if(typeof this.data[i][j][1]==='string'){this.data[i][j][1]=parseFloat(this.data[i][j][1]);}}}
this.properties={backgroundColor:'transparent',backgroundGrid:true,backgroundGridRadials:true,backgroundGridRadialsCount:null,backgroundGridCircles:true,backgroundGridCirclesCount:null,backgroundGridLinewidth:1,backgroundGridColor:'#ccc',centerx:null,centery:null,radius:null,colors:[],colorsDefault:'black',marginLeft:25,marginRight:25,marginTop:25,marginBottom:25,title:'',titleBackground:null,titleHpos:null,titleVpos:null,titleBold:null,titleFont:null,titleSize:null,titleItalic:null,titleColor:null,titleX:null,titleY:null,titleHalign:null,titleValign:null,labels:null,labelsColor:null,labelsFont:null,labelsSize:null,labelsItalic:null,labelsBold:null,labelsAxes:'n',labelsAxesBackground:'rgba(255,255,255,0.7)',labelsAxesCount:5,labelsAxesFont:null,labelsAxesSize:null,labelsAxesColor:null,labelsAxesBold:null,labelsAxesItalic:null,textColor:'black',textFont:'Arial, Verdana, sans-serif',textSize:12,textBold:false,textItalic:false,textAccessible:true,textAccessibleOverflow:'visible',textAccessiblePointerevents:false,key:null,keyBackground:'white',keyPosition:'graph',keyHalign:'right',keyShadow:false,keyShadowColor:'#666',keyShadowBlur:3,keyShadowOffsetx:2,keyShadowOffsety:2,keyPositionGutterBoxed:false,keyPositionX:null,keyPositionY:null,keyColorShape:'square',keyRounded:true,keyLinewidth:1,keyColors:null,keyInteractive:false,keyInteractiveHighlightChartFill:'rgba(255,0,0,0.9)',keyInteractiveHighlightLabel:'rgba(255,0,0,0.2)',keyLabelsColor:null,keyLabelsFont:null,keyLabelsSize:null,keyLabelsBold:null,keyLabelsItalic:null,keyLabelsOffsetx:0,keyLabelsOffsety:0,contextmenu:null,tooltips:null,tooltipsEvent:'onmousemove',tooltipsEffect:'fade',tooltipsCssClass:'RGraph_tooltip',tooltipsHighlight:true,tooltipsHotspot:3,tooltipsCoordsPage:false,annotatable:false,annotatableColor:'black',annotatableLinewidth:1,resizable:false,resizableHandleBackground:null,scaleMax:null,scaleMin:0,scaleDecimals:null,scalePoint:'.',scaleThousand:',',scaleRound:false,scaleZerostart:true,scaleUnitsPre:'',scaleUnitsPost:'',tickmarks:'cross',tickmarksSize:3,axesColor:'transparent',highlightStroke:'transparent',highlightFill:'rgba(255,255,255,0.7)',highlightPointRadius:3,segmentHighlight:false,segmentHighlightCount:null,segmentHighlightFill:'rgba(0,255,0,0.5)',segmentHighlightStroke:'rgba(0,0,0,0)',line:false,lineClose:false,lineLinewidth:1,lineColors:['black'],lineShadow:false,lineShadowColor:'black',lineShadowBlur:2,lineShadowOffsetx:3,lineShadowOffsety:3,clearto:'rgba(0,0,0,0)'}
for(var i=0,idx=0;i<this.data.length;++i){for(var j=0,len=this.data[i].length;j<len;j+=1,idx+=1){this['$'+idx]={}}}
if(!this.canvas.__rgraph_aa_translated__){this.context.translate(0.5,0.5);this.canvas.__rgraph_aa_translated__=true;}
var prop=this.properties;this.path=RGraph.pathObjectFunction;if(RGraph.Effects&&typeof RGraph.Effects.decorate==='function'){RGraph.Effects.decorate(this);}
this.responsive=RGraph.responsive;this.set=function(name)
{var value=typeof arguments[1]==='undefined'?null:arguments[1];if(arguments.length===1&&typeof arguments[0]==='object'){for(i in arguments[0]){if(typeof i==='string'){this.set(i,arguments[0][i]);}}
return this;}
prop[name]=value;return this;};this.get=function(name)
{return prop[name];};this.draw=function()
{RGraph.fireCustomEvent(this,'onbeforedraw');this.marginLeft=prop.marginLeft;this.marginRight=prop.marginRight;this.marginTop=prop.marginTop;this.marginBottom=prop.marginBottom;this.radius=(Math.min(this.canvas.width-this.marginLeft-this.marginRight,this.canvas.height-this.marginTop-this.marginBottom)/2);this.centerx=((this.canvas.width-this.marginLeft-this.marginRight)/2)+this.marginLeft;this.centery=((this.canvas.height-this.marginTop-this.marginBottom)/2)+this.marginTop;this.coords=[];this.coords2=[];this.coordsText=[];if(typeof(prop.centerx)=='number')this.centerx=prop.centerx;if(typeof(prop.centery)=='number')this.centery=prop.centery;if(typeof(prop.radius)=='number')this.radius=prop.radius;if(!this.colorsParsed){this.parseColors();this.colorsParsed=true;}
var max=prop.scaleMax;var min=prop.scaleMin;if(typeof(max)=='number'){this.max=max;this.scale2=RGraph.getScale({object:this,options:{'scale.max':max,'scale.min':min,'scale.strict':true,'scale.decimals':Number(prop.scaleDecimals),'scale.point':prop.scalePoint,'scale.thousand':prop.scaleThousand,'scale.round':prop.scaleRound,'scale.units.pre':prop.scaleUnitsPre,'scale.units.post':prop.scaleUnitsPost,'scale.labels.count':prop.labelsAxesCount}});}else{for(var i=0;i<this.data.length;i+=1){for(var j=0,len=this.data[i].length;j<len;j+=1){this.max=Math.max(this.max,this.data[i][j][1]);}}
this.min=0;this.scale2=RGraph.getScale({object:this,options:{'scale.max':this.max,'scale.min':0,'scale.decimals':Number(prop.scaleDecimals),'scale.point':prop.scalePoint,'scale.thousand':prop.scaleThousand,'scale.round':prop.scaleRound,'scale.units.pre':prop.scaleUnitsPre,'scale.units.post':prop.scaleUnitsPost,'scale.labels.count':prop.labelsAxesCount}});this.max=this.scale2.max;}
if(prop.key&&prop.key.length>0&&prop.key.length>=3){this.centerx=this.centerx-prop.marginRight+5;}
if(typeof prop.key==='object'&&RGraph.isArray(prop.key)&&prop.key[0]){prop.colors=[];for(var i=0;i<this.data.length;i+=1){for(var j=0,len=this.data[i].length;j<len;j+=1){if(typeof this.data[i][j][2]=='string'){prop.colors.push(this.data[i][j][2]);}}}}
this.set('tooltips',[]);for(var i=0;i<this.data.length;i+=1){for(var j=0,len=this.data[i].length;j<len;j+=1){prop.tooltips.push(this.data[i][j][3]);}}
this.context.beginPath();this.drawBackground();this.drawRscatter();this.drawLabels();var key=prop.key;if(key&&key.length){RGraph.drawKey(this,prop.key,prop.colors);}
if(prop.contextmenu){RGraph.showContext(this);}
if(prop.title){RGraph.drawTitle(this,prop.title,this.centery-this.radius-10,this.centerx,prop.titleSize?prop.titleSize:prop.textSize+2);}
if(prop.resizable){RGraph.allowResizing(this);}
RGraph.installEventListeners(this);if(prop.segmentHighlight){RGraph.allowSegmentHighlight({object:this,count:typeof prop.segmentHighlightCount==='number'?prop.segmentHighlightCount:((prop.backgroundGridDiagonalsCount?prop.backgroundGridDiagonalsCount:(prop.labels?prop.labels.length:8))),fill:prop.segmentHighlightFill,stroke:prop.segmentHighlightStroke});}
if(this.firstDraw){this.firstDraw=false;RGraph.fireCustomEvent(this,'onfirstdraw');this.firstDrawFunc();}
RGraph.fireCustomEvent(this,'ondraw');return this;};this.exec=function(func)
{func(this);return this;};this.drawBackground=function()
{if(prop.backgroundColor!='transparent'){this.path({path:'b a % % % % % false f %',args:[this.centerx,this.centery,this.radius,0,2*Math.PI,prop.backgroundColor]});}
var gridEnabled=prop.backgroundGrid;if(gridEnabled){this.context.lineWidth=prop.backgroundGridLinewidth;if(prop.backgroundGridCircles){this.context.strokeStyle=prop.backgroundGridColor;this.context.beginPath();if(RGraph.isNull(prop.backgroundGridCirclesCount)){prop.backgroundGridCirclesCount=prop.labelsAxesCount;}
var r=this.radius/prop.backgroundGridCirclesCount;for(var i=0,len=this.radius;i<=len;i+=r){this.context.moveTo(this.centerx+i,this.centery);this.context.arc(this.centerx,this.centery,i,0,RGraph.TWOPI,0);}
this.context.stroke();}
if(prop.backgroundGridRadials){this.context.strokeStyle=prop.backgroundGridColor;this.context.beginPath();if(typeof prop.backgroundGridRadialsCount==='number'){var inc=360/prop.backgroundGridRadialsCount;}else if(prop.labels&&prop.labels.length){var inc=360/prop.labels.length;}else{var inc=45;}
for(var i=0;i<360;i+=inc){this.context.arc(this.centerx,this.centery,this.radius,(i/(180/RGraph.PI))-RGraph.HALFPI,((i+0.01)/(180/RGraph.PI))-RGraph.HALFPI,0);this.context.lineTo(this.centerx,this.centery);}
this.context.stroke();}}
this.context.lineWidth=1;this.context.beginPath();this.context.strokeStyle=prop.axesColor;this.context.moveTo(this.centerx-this.radius,Math.round(this.centery));this.context.lineTo(this.centerx+this.radius,Math.round(this.centery));this.context.moveTo(Math.round(this.centerx-this.radius),this.centery-5);this.context.lineTo(Math.round(this.centerx-this.radius),this.centery+5);this.context.moveTo(Math.round(this.centerx+this.radius),this.centery-5);this.context.lineTo(Math.round(this.centerx+this.radius),this.centery+5);var numticks=prop.labelsAxesCount;if(numticks){for(var i=(this.centerx-this.radius);i<(this.centerx+this.radius);i+=(this.radius/numticks)){this.context.moveTo(Math.round(i),this.centery-3);this.context.lineTo(Math.round(i),this.centery+3);}
for(var i=(this.centery-this.radius);i<(this.centery+this.radius);i+=(this.radius/numticks)){this.context.moveTo(this.centerx-3,Math.round(i));this.context.lineTo(this.centerx+3,Math.round(i));}}
this.context.moveTo(Math.round(this.centerx),this.centery-this.radius);this.context.lineTo(Math.round(this.centerx),this.centery+this.radius);if(prop.axesCaps){this.context.moveTo(this.centerx-5,Math.round(this.centery-this.radius));this.context.lineTo(this.centerx+5,Math.round(this.centery-this.radius));this.context.moveTo(this.centerx-5,Math.round(this.centery+this.radius));this.context.lineTo(this.centerx+5,Math.round(this.centery+this.radius));}
this.context.closePath();this.context.stroke();};this.drawRscatter=function()
{for(var dataset=0;dataset<this.data.length;dataset+=1){var data=this.data[dataset];this.coords2[dataset]=[];var drawPoints=function(obj)
{for(var i=0;i<data.length;++i){var d1=data[i][0],d2=data[i][1],a=d1/(180/RGraph.PI),r=((d2-prop.scaleMin)/(obj.scale2.max-obj.scale2.min))*obj.radius,x=Math.sin(a)*r,y=Math.cos(a)*r,color=data[i][2]?data[i][2]:prop.colorsDefault,tooltip=data[i][3]?data[i][3]:null
if(tooltip&&String(tooltip).length){obj.hasTooltips=true;}
x=x+obj.centerx;y=obj.centery-y;obj.drawTick(x,y,color);obj.coords.push([x,y,color,tooltip]);obj.coords2[dataset].push([x,y,color,tooltip]);}}
drawPoints(this);if(prop.line){this.drawLine(dataset);}}};this.drawLine=function(idx)
{var opt={dataset:idx,coords:this.coords2[idx],color:prop.lineColors[idx],shadow:prop.lineShadow,shadowColor:prop.lineShadowColor,shadowOffsetX:prop.lineShadowOffsetx,shadowOffsetY:prop.lineShadowOffsety,shadowBlur:prop.lineShadowBlur,linewidth:prop.lineLinewidth};this.context.beginPath();this.context.strokeStyle=this.parseSingleColorForGradient(opt.color);this.context.lineWidth=typeof prop.lineLinewidth==='object'?prop.lineLinewidth[idx]:prop.lineLinewidth;this.context.lineCap='round';if(opt.shadow){RGraph.setShadow(this,opt.shadowColor,opt.shadowOffsetX,opt.shadowOffsetY,opt.shadowBlur);}
for(var i=0;i<this.coords2[idx].length;++i){if(i===0){this.context.moveTo(this.coords2[idx][i][0],this.coords2[idx][i][1]);var startCoords=RGraph.arrayClone(this.coords2[idx]);}else{this.context.lineTo(this.coords2[idx][i][0],this.coords2[idx][i][1]);}}
if((typeof prop.lineClose==='boolean'&&prop.lineClose)||(typeof prop.lineClose==='object'&&prop.lineClose[idx])){this.context.lineTo(this.coords2[idx][0][0],this.coords2[idx][0][1]);}
this.context.stroke();RGraph.noShadow(this);};this.drawLabels=function()
{this.context.lineWidth=1;this.context.fillStyle='black';this.context.strokeStyle='black';var key=prop.key;var r=this.radius;var axesColor=prop.axesColor;var italic=prop.textItalic;var bold=prop.textBold;var color=prop.textColor;var font=prop.textFont;var size=prop.textSize;var axes=prop.labelsAxes.toLowerCase();var units_pre=prop.scaleUnitsPre;var units_post=prop.scaleUnitsPost;var decimals=prop.scaleDecimals;var centerx=this.centerx;var centery=this.centery;this.context.fillStyle=prop.textColor;if(typeof prop.labels=='object'&&prop.labels){this.drawCircularLabels(this.context,prop.labels,font,size,r);}
var offset=10;var centered=false;if(axesColor==='rgba(0,0,0,0)'||axesColor==='rgb(0,0,0)'||axesColor==='transparent'){offset=0;centered=true;}
var textConf=RGraph.getTextConf({object:this,prefix:'labelsAxes'});for(var i=0,len=this.scale2.labels.length;i<len;++i){if(axes.indexOf('n')>-1)RGraph.text({object:this,tag:'scale',font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:centerx-offset,y:centery-(r*((i+1)/len)),text:this.scale2.labels[i],valign:'center',halign:centered?'center':'right',bounding:true,boundingFill:prop.labelsAxesBackground,boundingStroke:'rgba(0,0,0,0)'});if(axes.indexOf('s')>-1)RGraph.text({object:this,tag:'scale',font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:centerx-offset,y:centery+(r*((i+1)/len)),text:this.scale2.labels[i],valign:'center',halign:centered?'center':'right',bounding:true,boundingFill:prop.labelsAxesBackground,boundingStroke:'rgba(0,0,0,0)'});if(axes.indexOf('e')>-1)RGraph.text({object:this,tag:'scale',font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:centerx+(r*((i+1)/len)),y:centery+offset,text:this.scale2.labels[i],valign:centered?'center':'top',halign:'center',bounding:true,boundingFill:prop.labelsAxesBackground,boundingStroke:'rgba(0,0,0,0)'});if(axes.indexOf('w')>-1)RGraph.text({object:this,tag:'scale',font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:centerx-(r*((i+1)/len)),y:centery+offset,text:this.scale2.labels[i],valign:centered?'center':'top',halign:'center',bounding:true,boundingFill:prop.labelsAxesBackground,boundingStroke:'rgba(0,0,0,0)'});}
if(prop.labelsAxes.length>0&&prop.scaleZerostart){RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:centerx,y:centery,text:RGraph.numberFormat({object:this,number:Number(this.scale2.min).toFixed(this.scale2.decimals),unitspre:this.scale2.units_pre,unitspost:this.scale2.units_post}),valign:'center',halign:'center',bounding:true,boundingFill:prop.labelsAxesBackground,boundingStroke:'rgba(0,0,0,0)',tag:'scale'});}};this.drawCircularLabels=function(context,labels,font_face,font_size,r)
{var r=r+10,color=prop.labelsColor;for(var i=0;i<labels.length;++i){var a=(360/labels.length)*(i+1)-(360/(labels.length*2));var a=a-90+(prop.labelsPosition=='edge'?((360/labels.length)/2):0);var x=Math.cos(a/(180/RGraph.PI))*r;var y=Math.sin(a/(180/RGraph.PI))*r;var textConf=RGraph.getTextConf({object:this,prefix:'labels'});RGraph.text({object:this,font:textConf.font,size:textConf.size,color:textConf.color,bold:textConf.bold,italic:textConf.italic,x:this.centerx+x,y:this.centery+y,text:String(labels[i]),valign:'center',halign:((this.centerx+x)>this.centerx)?'left':'right',tag:'labels'});}};this.drawTick=function(x,y,color)
{var tickmarks=prop.tickmarks;var ticksize=prop.tickmarksSize;this.context.strokeStyle=color;this.context.fillStyle=color;var prevLinewidth=this.context.lineWidth;this.context.lineWidth=1;if(tickmarks=='cross'){this.context.beginPath();this.context.moveTo(x+ticksize,y+ticksize);this.context.lineTo(x-ticksize,y-ticksize);this.context.stroke();this.context.beginPath();this.context.moveTo(x-ticksize,y+ticksize);this.context.lineTo(x+ticksize,y-ticksize);this.context.stroke();}else if(tickmarks=='circle'){this.context.beginPath();this.context.arc(x,y,ticksize,0,6.2830,false);this.context.fill();}else if(tickmarks=='square'){this.context.beginPath();this.context.fillRect(x-ticksize,y-ticksize,2*ticksize,2*ticksize);this.context.fill();}else if(tickmarks=='diamond'){this.context.beginPath();this.context.moveTo(x,y-ticksize);this.context.lineTo(x+ticksize,y);this.context.lineTo(x,y+ticksize);this.context.lineTo(x-ticksize,y);this.context.closePath();this.context.fill();}else if(tickmarks=='plus'){this.context.lineWidth=1;this.context.beginPath();this.context.moveTo(x,y-ticksize);this.context.lineTo(x,y+ticksize);this.context.moveTo(x-ticksize,y);this.context.lineTo(x+ticksize,y);this.context.stroke();}
this.context.lineWidth=prevLinewidth;};this.getShape=function(e)
{var mouseXY=RGraph.getMouseXY(e);var mouseX=mouseXY[0];var mouseY=mouseXY[1];var overHotspot=false;var offset=prop.tooltipsHotspot;for(var i=0,len=this.coords.length;i<len;++i){var x=this.coords[i][0];var y=this.coords[i][1];var tooltip=this.coords[i][3];if(mouseX<(x+offset)&&mouseX>(x-offset)&&mouseY<(y+offset)&&mouseY>(y-offset)){if(RGraph.parseTooltipText){var tooltip=RGraph.parseTooltipText(prop.tooltips,i);}
var indexes=RGraph.sequentialIndexToGrouped(i,this.data);return{object:this,x:x,y:y,dataset:indexes[0],index:indexes[1],sequentialIndex:i,tooltip:typeof tooltip==='string'?tooltip:null};}}};this.allowTooltips=function()
{RGraph.preLoadTooltipImages(this);RGraph.installWindowMousedownTooltipListener(this);RGraph.installCanvasMousemoveTooltipListener(this);RGraph.installCanvasMouseupTooltipListener(this);};this.highlight=function(shape)
{if(typeof prop.highlightStyle==='function'){(prop.highlightStyle)(shape);}else{RGraph.Highlight.point(this,shape);}};this.getObjectByXY=function(e)
{var mouseXY=RGraph.getMouseXY(e);var mouseX=mouseXY[0];var mouseY=mouseXY[1];var centerx=this.centerx;var centery=this.centery;var radius=this.radius;if(mouseX>(centerx-radius)&&mouseX<(centerx+radius)&&mouseY>(centery-radius)&&mouseY<(centery+radius)){return this;}};this.getRadius=function(value)
{var max=this.max;if(value<0||value>max){return null;}
var r=(value/max)*this.radius;return r;};this.parseColors=function()
{if(this.original_colors.length===0){this.original_colors.data=RGraph.arrayClone(this.data);this.original_colors.highlightStroke=RGraph.arrayClone(prop.highlightStroke);this.original_colors.highlightFill=RGraph.arrayClone(prop.highlightFill);this.original_colors.colorsDefault=RGraph.arrayClone(prop.colorsDefault);this.original_colors.backgroundGridColor=RGraph.arrayClone(prop.backgroundGridColor);this.original_colors.backgroundColor=RGraph.arrayClone(prop.backgroundColor);this.original_colors.segmentHighlightStroke=RGraph.arrayClone(prop.segmentHighlightStroke);this.original_colors.segmentHighlightFill=RGraph.arrayClone(prop.segmentHighlightFill);}
for(var i=0;i<this.data.length;i+=1){for(var j=0,len=this.data[i].length;j<len;j+=1){this.data[i][j][2]=this.parseSingleColorForGradient(this.data[i][j][2]);}}
prop.highlightStroke=this.parseSingleColorForGradient(prop.highlightStroke);prop.highlightFill=this.parseSingleColorForGradient(prop.highlightFill);prop.colorsDefault=this.parseSingleColorForGradient(prop.colorsDefault);prop.backgroundGridColor=this.parseSingleColorForGradient(prop.backgroundGridColor);prop.backgroundColor=this.parseSingleColorForGradient(prop.backgroundColor);prop.segmentHighlightStroke=this.parseSingleColorForGradient(prop.segmentHighlightStroke);prop.segmentHighlightFill=this.parseSingleColorForGradient(prop.segmentHighlightFill);};this.reset=function()
{};this.parseSingleColorForGradient=function(color)
{if(!color||typeof color!='string'){return color;}
if(color.match(/^gradient\((.*)\)$/i)){if(color.match(/^gradient\(({.*})\)$/i)){return RGraph.parseJSONGradient({object:this,def:RegExp.$1});}
var parts=RegExp.$1.split(':');var grad=this.context.createRadialGradient(this.centerx,this.centery,0,this.centerx,this.centery,this.radius);var diff=1/(parts.length-1);grad.addColorStop(0,RGraph.trim(parts[0]));for(var j=1;j<parts.length;++j){grad.addColorStop(j*diff,RGraph.trim(parts[j]));}}
return grad?grad:color;};this.interactiveKeyHighlight=function(index)
{var obj=this;if(this.coords2&&this.coords2[index]&&this.coords2[index].length){this.coords2[index].forEach(function(value,idx,arr)
{obj.context.beginPath();obj.context.fillStyle=prop.keyInteractiveHighlightChartFill;obj.context.arc(value[0],value[1],prop.tickmarksSize+2,0,RGraph.TWOPI,false);obj.context.fill();});}};this.on=function(type,func)
{if(type.substr(0,2)!=='on'){type='on'+type;}
if(typeof this[type]!=='function'){this[type]=func;}else{RGraph.addCustomEventListener(this,type,func);}
return this;};this.resetColorsToOriginalValues=function()
{for(var i=0,len=this.original_colors.data.length;i<len;++i){for(var j=0,len2=this.original_colors.data[i].length;j<len2;++j){this.data[i][j][2]=RGraph.arrayClone(this.original_colors.data[i][j][2]);}}};this.firstDrawFunc=function()
{};RGraph.register(this);RGraph.parseObjectStyleConfig(this,conf.options);};